{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<ul> <li>Hescore_Json</li> </ul>"},{"location":"hescore_json/about/","title":"About","text":"<p>hescore_json</p>"},{"location":"hescore_json/about/#about","title":"About","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title assessment_type <code>enum</code> assessment_date <code>string</code> <code>date</code> comments <code>['string', 'null']</code> comment_api_only <code>string</code> dwelling_unit_type <code>enum</code> manufactured_home_sections <code>enum</code> year_built <code>integer</code> number_bedrooms <code>integer</code> number_units <code>integer</code> num_floor_above_grade <code>integer</code> floor_to_ceiling_height <code>number</code> conditioned_floor_area <code>number</code> orientation <code>enum</code> blower_door_test <code>boolean</code> air_sealing_present <code>boolean</code> envelope_leakage <code>integer</code>"},{"location":"hescore_json/about/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/about/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment dwelling_unit_type is <code>manufactured_home</code> manufactured_home_sections dwelling_unit_type is not <code>manufactured_home</code> manufactured_home_sections blower_door_test is <code>True</code> envelope_leakage blower_door_test is not <code>True</code> envelope_leakage dwelling_unit_type is one of [<code>apartment_unit</code>, <code>manufactured_home</code>] AND if fields dwelling_unit_type exists num_floor_above_grade dwelling_unit_type is not one of [<code>apartment_unit</code>, <code>manufactured_home</code>] AND if fields dwelling_unit_type exists num_floor_above_grade dwelling_unit_type is <code>apartment_unit</code> AND if fields dwelling_unit_type exists number_units dwelling_unit_type is not <code>apartment_unit</code> AND if fields dwelling_unit_type exists number_units"},{"location":"hescore_json/about/#assessment_type","title":"assessment_type","text":"<ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>initial</code> <code>final</code> <code>qa</code> <code>alternative</code> <code>test</code> <code>corrected</code> <code>mentor</code> <code>preconstruction</code>"},{"location":"hescore_json/about/#assessment_date","title":"assessment_date","text":"<p>Date the assessment was performed  </p> <ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/about/#comments","title":"comments","text":"<p>Free text comment field  </p> <ul> <li>is not required</li> <li>Type: <code>['string', 'null']</code></li> </ul>"},{"location":"hescore_json/about/#comment_api_only","title":"comment_api_only","text":"<p>Pass through field for use by api users  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/about/#dwelling_unit_type","title":"dwelling_unit_type","text":"<p>The type of dwelling unit  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>single_family_detached</code> <code>single_family_attached</code> <code>apartment_unit</code> <code>manufactured_home</code>"},{"location":"hescore_json/about/#manufactured_home_sections","title":"manufactured_home_sections","text":"<p>The sections of a manufactured home  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>single-wide</code> <code>double-wide</code> <code>triple-wide</code>"},{"location":"hescore_json/about/#year_built","title":"year_built","text":"<p>Year building was built  </p> <ul> <li>is required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>1600</code></p>"},{"location":"hescore_json/about/#number_bedrooms","title":"number_bedrooms","text":"<p>Number of bedrooms in house  </p> <ul> <li>is required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>1</code> Maximum Number: <code>10</code></p>"},{"location":"hescore_json/about/#number_units","title":"number_units","text":"<p>Total number of units in apartment building  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Exclusive Minimum: <code>1</code></p>"},{"location":"hescore_json/about/#num_floor_above_grade","title":"num_floor_above_grade","text":"<p>Number of floors above grade. Assumes 1 when dwelling_unit_type is apartment_unit  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>1</code> Maximum Number: <code>4</code></p>"},{"location":"hescore_json/about/#floor_to_ceiling_height","title":"floor_to_ceiling_height","text":"<p>Floor to ceiling height (feet)  </p> <ul> <li>is required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>6</code> Maximum Number: <code>15</code></p>"},{"location":"hescore_json/about/#conditioned_floor_area","title":"conditioned_floor_area","text":"<p>Total conditioned floor area (square feet)  </p> <ul> <li>is required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>250</code> Maximum Number: <code>25000</code></p>"},{"location":"hescore_json/about/#orientation","title":"orientation","text":"<p>Orientation of the front door  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>north</code> <code>north_east</code> <code>east</code> <code>south_east</code> <code>south</code> <code>south_west</code> <code>west</code> <code>north_west</code>"},{"location":"hescore_json/about/#blower_door_test","title":"blower_door_test","text":"<p>Was a blower door test performed on this house?  </p> <ul> <li>is required</li> <li>Type: <code>boolean</code></li> </ul>"},{"location":"hescore_json/about/#air_sealing_present","title":"air_sealing_present","text":"<p>Has the building been air sealed?  </p> <ul> <li>is not required</li> <li>Type: <code>boolean</code></li> </ul>"},{"location":"hescore_json/about/#envelope_leakage","title":"envelope_leakage","text":"<p>Building air leakage measured with a blower door (CFM50) (only used if blower_door_test is true)  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>0</code> Maximum Number: <code>25000</code></p>"},{"location":"hescore_json/address/","title":"Address","text":"<p>hescore_json</p>"},{"location":"hescore_json/address/#address","title":"Address","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title address <code>string</code> address2 <code>['string', 'null']</code> city <code>string</code> state <code>enum</code> zip_code <code>string</code> external_building_id <code>string</code>"},{"location":"hescore_json/address/#address_1","title":"address","text":"<ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/address/#address2","title":"address2","text":"<ul> <li>is not required</li> <li>Type: <code>['string', 'null']</code></li> </ul>"},{"location":"hescore_json/address/#city","title":"city","text":"<ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/address/#state","title":"state","text":"<ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>AL</code> <code>AK</code> <code>AZ</code> <code>AR</code> <code>CA</code> <code>CO</code> <code>CT</code> <code>DE</code> <code>FL</code> <code>GA</code> <code>HI</code> <code>ID</code> <code>IL</code> <code>IN</code> <code>IA</code> <code>KS</code> <code>KY</code> <code>LA</code> <code>ME</code> <code>MD</code> <code>MA</code> <code>MI</code> <code>MN</code> <code>MS</code> <code>MO</code> <code>MT</code> <code>NE</code> <code>NV</code> <code>NH</code> <code>NJ</code> <code>NM</code> <code>NY</code> <code>NC</code> <code>ND</code> <code>OH</code> <code>OK</code> <code>OR</code> <code>PA</code> <code>RI</code> <code>SC</code> <code>SD</code> <code>TN</code> <code>TX</code> <code>UT</code> <code>VT</code> <code>VA</code> <code>WA</code> <code>WV</code> <code>WI</code> <code>WY</code> <code>DC</code>"},{"location":"hescore_json/address/#zip_code","title":"zip_code","text":"<ul> <li>is required</li> <li>Type: <code>string</code></li> </ul> <p>Regex Pattern: <code>^[0-9]{5}$</code></p>"},{"location":"hescore_json/address/#external_building_id","title":"external_building_id","text":"<p>Allows an organization to assign an ID to the building for that organization's internal use. This field has no impact within the HES system, except that it can be filtered on in some of the retrieve_* methods.  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/cooling/","title":"Cooling","text":"<p>hescore_json / system / hvac / hvac_item</p>"},{"location":"hescore_json/cooling/#cooling","title":"Cooling","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title type <code>string</code> efficiency_method <code>enum</code> year <code>integer</code> efficiency <code>number</code> efficiency_unit <code>enum</code>"},{"location":"hescore_json/cooling/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/cooling/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment efficiency_method is <code>shipment_weighted</code> year efficiencyefficiency_unit efficiency_method is not <code>shipment_weighted</code> efficiencyefficiency_unit year type is one of [<code>split_dx</code>, <code>heat_pump</code>, <code>mini_split</code>] AND if fields type exists efficiency_method type is <code>packaged_dx</code> AND if fields type exists efficiency_method type is <code>gchp</code> AND if fields type exists efficiency_method type is one of [<code>mini_split</code>, <code>gchp</code>] AND if fields type exists efficiency_method type is one of [<code>dec</code>, <code>none</code>] AND if fields type exists efficiency_methodefficiency_unitefficiencyyear"},{"location":"hescore_json/cooling/#type","title":"type","text":"<p>Cooling equipment type  </p> <ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/cooling/#one-of","title":"One Of","text":"<p>Constant: <code>packaged_dx</code> </p> <p>Constant: <code>split_dx</code> </p> <p>Constant: <code>heat_pump</code> </p> <p>Constant: <code>gchp</code> </p> <p>Constant: <code>dec</code> </p> <p>Constant: <code>mini_split</code> </p> <p>Constant: <code>none</code> </p>"},{"location":"hescore_json/cooling/#efficiency_method","title":"efficiency_method","text":"<p>Method to determine cooling efficiency  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>user</code> <code>shipment_weighted</code>"},{"location":"hescore_json/cooling/#year","title":"year","text":"<p>Year equipment was manufactured (only used if efficiency_method is shipment_weighted)  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>1970</code></p>"},{"location":"hescore_json/cooling/#efficiency","title":"efficiency","text":"<ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Comment: Additional requirements for this property apply based on the cooling system type</p>"},{"location":"hescore_json/cooling/#efficiency_unit","title":"efficiency_unit","text":"<ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>eer</code> <code>ceer</code> <code>seer</code> <code>seer2</code> <p>Comment: Additional requirements for this property apply based on the cooling system type</p>"},{"location":"hescore_json/domestic_hot_water/","title":"Domestic hot water","text":"<p>hescore_json / system</p>"},{"location":"hescore_json/domestic_hot_water/#domestic-hot-water","title":"Domestic Hot Water","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title category <code>enum</code> type <code>string</code> fuel_primary <code>string</code> efficiency_method <code>enum</code> year <code>integer</code> efficiency <code>number</code> efficiency_unit <code>enum</code>"},{"location":"hescore_json/domestic_hot_water/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/domestic_hot_water/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment type is one of [<code>indirect</code>, <code>tankless_coil</code>] AND if fields type exists category fuel_primaryefficiency_method category is <code>unit</code> AND if fields category exists AND efficiency_method is <code>shipment_weighted</code> AND if fields efficiency_method exists year category is <code>unit</code> AND if fields category exists AND efficiency_method is not <code>shipment_weighted</code> AND if fields efficiency_method exists year category is <code>unit</code> AND if fields category exists AND efficiency_method is <code>user</code> AND if fields efficiency_method exists efficiencyefficiency_unit category is <code>unit</code> AND if fields category exists AND efficiency_method is not <code>user</code> AND if fields efficiency_method exists efficiencyefficiency_unit"},{"location":"hescore_json/domestic_hot_water/#category","title":"category","text":"<p>Water heater category  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>unit</code> <code>combined</code>"},{"location":"hescore_json/domestic_hot_water/#type","title":"type","text":"<p>Water heater type  </p> <ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/domestic_hot_water/#one-of","title":"One Of","text":"<p>Constant: <code>storage</code> </p> <p>Constant: <code>heat_pump</code> </p> <p>Constant: <code>indirect</code> </p> <p>Constant: <code>tankless_coil</code> </p> <p>Constant: <code>tankless</code> </p>"},{"location":"hescore_json/domestic_hot_water/#fuel_primary","title":"fuel_primary","text":"<p>Primary water heater fuel  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/domestic_hot_water/#one-of_1","title":"One Of","text":"<p>Constant: <code>electric</code> </p> <p>Constant: <code>natural_gas</code> </p> <p>Constant: <code>lpg</code> </p> <p>Constant: <code>fuel_oil</code> </p>"},{"location":"hescore_json/domestic_hot_water/#efficiency_method","title":"efficiency_method","text":"<p>Method to determine water heater efficiency  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>user</code> <code>shipment_weighted</code>"},{"location":"hescore_json/domestic_hot_water/#year","title":"year","text":"<p>Year water heater was manufactured (only used if efficiency_method is shipment_weighted)  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>1972</code></p>"},{"location":"hescore_json/domestic_hot_water/#efficiency","title":"efficiency","text":"<p>Efficiency of water heater (only used if efficiency_method is user)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul>"},{"location":"hescore_json/domestic_hot_water/#efficiency_unit","title":"efficiency_unit","text":"<p>Unit of water heater efficiency  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>ef</code> <code>uef</code>"},{"location":"hescore_json/generation/","title":"Generation","text":"<p>hescore_json / system</p>"},{"location":"hescore_json/generation/#generation","title":"Generation","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title solar_electric solar_electric Solar Electric"},{"location":"hescore_json/generation/#solar_electric","title":"solar_electric","text":"<ul> <li>is not required</li> <li>Type: solar_electric</li> </ul>"},{"location":"hescore_json/heating/","title":"Heating","text":"<p>hescore_json / system / hvac / hvac_item</p>"},{"location":"hescore_json/heating/#heating","title":"Heating","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title type <code>string</code> fuel_primary <code>string</code> efficiency_method <code>enum</code> year <code>integer</code> efficiency <code>number</code> efficiency_unit <code>enum</code>"},{"location":"hescore_json/heating/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/heating/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment efficiency_method is <code>shipment_weighted</code> year efficiencyefficiency_unit efficiency_method is not <code>shipment_weighted</code> efficiencyefficiency_unit year type is <code>none</code> AND if fields type exists fuel_primaryefficiency_methodyearefficiencyefficiency_unit type is not <code>none</code> AND if fields type exists fuel_primary type is one of [<code>central_furnace</code>, <code>wall_furnace</code>, <code>boiler</code>] AND if fields type exists AND fuel_primary is <code>electric</code> AND if fields fuel_primary exists efficiencyefficiency_unitefficiency_methodyear type is one of [<code>central_furnace</code>, <code>wall_furnace</code>, <code>boiler</code>] AND if fields type exists AND fuel_primary is not <code>electric</code> AND if fields fuel_primary exists efficiency_methodfuel_primary type is one of [<code>heat_pump</code>, <code>mini_split</code>] AND if fields type exists fuel_primaryefficiency_method type is <code>baseboard</code> AND if fields type exists efficiencyefficiency_unitefficiency_methodyear type is one of [<code>wood_stove</code>] AND if fields type exists efficiency_unitefficiencyefficiency_methodyear"},{"location":"hescore_json/heating/#type","title":"type","text":"<p>Heating equipment type  </p> <ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/heating/#one-of","title":"One Of","text":"<p>Constant: <code>none</code> </p> <p>Constant: <code>central_furnace</code> </p> <p>Constant: <code>wall_furnace</code> </p> <p>Constant: <code>boiler</code> </p> <p>Constant: <code>heat_pump</code> </p> <p>Constant: <code>baseboard</code> </p> <p>Constant: <code>gchp</code> </p> <p>Constant: <code>mini_split</code> </p> <p>Constant: <code>wood_stove</code> </p>"},{"location":"hescore_json/heating/#fuel_primary","title":"fuel_primary","text":"<p>Primary heating fuel  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/heating/#one-of_1","title":"One Of","text":"<p>Constant: <code>natural_gas</code> </p> <p>Constant: <code>lpg</code> </p> <p>Constant: <code>fuel_oil</code> </p> <p>Constant: <code>electric</code> </p> <p>Constant: <code>cord_wood</code> </p> <p>Constant: <code>pellet_wood</code> </p>"},{"location":"hescore_json/heating/#efficiency_method","title":"efficiency_method","text":"<p>Method to determine heating efficiency  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>user</code> <code>shipment_weighted</code>"},{"location":"hescore_json/heating/#year","title":"year","text":"<p>Year equipment was manufactured (only used if efficiency_method is shipment_weighted)  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>1970</code></p>"},{"location":"hescore_json/heating/#efficiency","title":"efficiency","text":"<ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Comment: Additional requirements for this property apply based on the heating system type</p>"},{"location":"hescore_json/heating/#efficiency_unit","title":"efficiency_unit","text":"<ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>afue</code> <code>cop</code> <code>hspf</code> <code>hspf2</code> <p>Comment: Additional requirements for this property apply based on the heating system type</p>"},{"location":"hescore_json/hescore_json/","title":"HEScore JSON","text":"<p>Defined in: hescore_json.schema.json.schema.json Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title version <code>string</code> address address Address hpwes home_performance_with_energy_star Home Performance with Energy Star about about About zone zone Zone systems system System"},{"location":"hescore_json/hescore_json/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/hescore_json/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment"},{"location":"hescore_json/hescore_json/#version","title":"version","text":"<p>The version of the building unit schema. Use semantic versioning.  </p> <ul> <li>is required</li> <li>Type: <code>string</code></li> </ul> <p>Constant: <code>3.0</code></p>"},{"location":"hescore_json/hescore_json/#address","title":"address","text":"<ul> <li>is required</li> <li>Type: address</li> </ul>"},{"location":"hescore_json/hescore_json/#hpwes","title":"hpwes","text":"<ul> <li>is not required</li> <li>Type: home_performance_with_energy_star</li> </ul>"},{"location":"hescore_json/hescore_json/#about","title":"about","text":"<ul> <li>is required</li> <li>Type: about</li> </ul>"},{"location":"hescore_json/hescore_json/#zone","title":"zone","text":"<ul> <li>is required</li> <li>Type: zone</li> </ul>"},{"location":"hescore_json/hescore_json/#systems","title":"systems","text":"<ul> <li>is required</li> <li>Type: system</li> </ul>"},{"location":"hescore_json/home_performance_with_energy_star/","title":"Home performance with energy star","text":"<p>hescore_json</p>"},{"location":"hescore_json/home_performance_with_energy_star/#home-performance-with-energy-star","title":"Home Performance with Energy Star","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title improvement_installation_start_date <code>string</code> <code>date</code> improvement_installation_completion_date <code>string</code> <code>date</code> contractor_zip_code <code>string</code> contractor_business_name <code>string</code> is_income_eligible_program <code>boolean</code>"},{"location":"hescore_json/home_performance_with_energy_star/#improvement_installation_start_date","title":"improvement_installation_start_date","text":"<p>The date on which HPwES upgrade installation began, in YYYY-MM-DD format  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/home_performance_with_energy_star/#improvement_installation_completion_date","title":"improvement_installation_completion_date","text":"<p>The date on which HPwES upgrade installation was completed, in YYYY-MM-DD format  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/home_performance_with_energy_star/#contractor_zip_code","title":"contractor_zip_code","text":"<p>Five-digit postal code of the contractor installing the HPwES upgrades  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul> <p>Regex Pattern: <code>^[0-9]{5}$</code></p>"},{"location":"hescore_json/home_performance_with_energy_star/#contractor_business_name","title":"contractor_business_name","text":"<p>The name of the contracting business installing the HPwES upgrades  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/home_performance_with_energy_star/#is_income_eligible_program","title":"is_income_eligible_program","text":"<p>Whether or not the HPwES upgrades were performed for a homeowner participating in an income-eligible program  </p> <ul> <li>is not required</li> <li>Type: <code>boolean</code></li> </ul>"},{"location":"hescore_json/hvac/","title":"Hvac","text":"<p>hescore_json / system</p>"},{"location":"hescore_json/hvac/#hvac","title":"HVAC","text":"<p>Type: array[hvac_item]</p>"},{"location":"hescore_json/hvac_distribution_validation_1/","title":"Hvac distribution validation 1","text":"<p>zone_roof_type_validation_1 / zone_roof_type_validation_2 / zone_floor_foundation_type_validation_1 / zone_floor_foundation_type_validation_2 / zone_floor_foundation_type_validation_3 / zone_floor_foundation_type_validation_4 / zone_floor_foundation_type_validation_5 / zone_floor_foundation_type_validation_5</p>"},{"location":"hescore_json/hvac_distribution_validation_1/#hvac-distribution-validation-1","title":"HVAC Distribution Validation 1","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title hvac_distribution <code>unknown</code>"},{"location":"hescore_json/hvac_distribution_validation_1/#hvac_distribution","title":"hvac_distribution","text":"<ul> <li>is required</li> <li>Type: <code>unknown</code></li> </ul>"},{"location":"hescore_json/hvac_item/","title":"Hvac item","text":"<p>hescore_json / system / hvac</p>"},{"location":"hescore_json/hvac_item/#hvac-item","title":"HVAC Item","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title hvac_name <code>enum</code> hvac_fraction <code>number</code> heating heating Heating cooling cooling Cooling hvac_distribution <code>unknown</code>"},{"location":"hescore_json/hvac_item/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/hvac_item/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment heating.type is one of [<code>central_furnace</code>, <code>wall_furnace</code>, <code>baseboard</code>, <code>boiler</code>] AND if fields type exists AND if fields heating exists cooling heating.type is <code>heat_pump</code> AND if fields type exists AND if fields heating exists cooling heating.type is <code>gchp</code> AND if fields type exists AND if fields heating exists cooling heating.type is <code>mini_split</code> AND if fields type exists AND if fields heating exists cooling cooling.type is <code>split_dx</code> AND if fields type exists AND if fields cooling exists heating cooling.type is <code>heat_pump</code> AND if fields type exists AND if fields cooling exists heating cooling.type is <code>gchp</code> AND if fields type exists AND if fields cooling exists heating cooling.type is <code>mini_split</code> AND if fields type exists AND if fields cooling exists heating hvac_distribution cooling.type is one of [<code>split_dx</code>, <code>heat_pump</code>, <code>gchp</code>] AND if fields type exists AND if fields cooling exists hvac_distribution hvac_distribution"},{"location":"hescore_json/hvac_item/#hvac_name","title":"hvac_name","text":"<p>Name of this system instance  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>hvac1</code> <code>hvac2</code>"},{"location":"hescore_json/hvac_item/#hvac_fraction","title":"hvac_fraction","text":"<p>Fraction of conditioned floor area served by this system  </p> <ul> <li>is required</li> <li>Type: <code>number</code></li> </ul> <p>Maximum Number: <code>1</code> Exclusive Minimum: <code>0</code></p>"},{"location":"hescore_json/hvac_item/#heating","title":"heating","text":"<p>Inputs about the heating system  </p> <ul> <li>is not required</li> <li>Type: heating</li> </ul>"},{"location":"hescore_json/hvac_item/#cooling","title":"cooling","text":"<p>Inputs about the cooling system  </p> <ul> <li>is not required</li> <li>Type: cooling</li> </ul>"},{"location":"hescore_json/hvac_item/#hvac_distribution","title":"hvac_distribution","text":"<ul> <li>is not required</li> <li>Type: <code>unknown</code></li> </ul> <p>Comment: Additional requirements for this property apply based on the heating and cooling system type</p>"},{"location":"hescore_json/knee_wall/","title":"Knee wall","text":"<p>hescore_json / zone / zone_roof / zone_roof_item</p>"},{"location":"hescore_json/knee_wall/#knee-wall","title":"Knee Wall","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title area <code>number</code> assembly_code <code>enum</code>"},{"location":"hescore_json/knee_wall/#area","title":"area","text":"<p>Knee wall area  </p> <ul> <li>is required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>1</code> Maximum Number: <code>5000</code></p>"},{"location":"hescore_json/knee_wall/#assembly_code","title":"assembly_code","text":"<p>Knee wall assembly code  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>kwwf00</code> <code>kwwf03</code> <code>kwwf07</code> <code>kwwf11</code> <code>kwwf13</code> <code>kwwf15</code> <code>kwwf19</code> <code>kwwf21</code>"},{"location":"hescore_json/solar_electric/","title":"Solar electric","text":"<p>hescore_json / system / generation</p>"},{"location":"hescore_json/solar_electric/#solar-electric","title":"Solar Electric","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title capacity_known <code>boolean</code> system_capacity <code>number</code> num_panels <code>integer</code> year <code>integer</code> array_azimuth <code>enum</code> array_tilt <code>enum</code>"},{"location":"hescore_json/solar_electric/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/solar_electric/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment capacity_known is <code>True</code> capacity_knownsystem_capacity num_panels capacity_known is not <code>True</code> AND capacity_known is <code>False</code> capacity_knownnum_panels system_capacity"},{"location":"hescore_json/solar_electric/#capacity_known","title":"capacity_known","text":"<p>Is the capacity known?  </p> <ul> <li>is required</li> <li>Type: <code>boolean</code></li> </ul>"},{"location":"hescore_json/solar_electric/#system_capacity","title":"system_capacity","text":"<p>DC capacity of system (kW) (only used if capacity_known is true)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul>"},{"location":"hescore_json/solar_electric/#num_panels","title":"num_panels","text":"<p>Number of panels in the system (only used if capacity_known is false)  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul>"},{"location":"hescore_json/solar_electric/#year","title":"year","text":"<p>Year system was installed  </p> <ul> <li>is required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>2000</code></p>"},{"location":"hescore_json/solar_electric/#array_azimuth","title":"array_azimuth","text":"<p>Direction panels face  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>north</code> <code>north_east</code> <code>east</code> <code>south_east</code> <code>south</code> <code>south_west</code> <code>west</code> <code>north_west</code>"},{"location":"hescore_json/solar_electric/#array_tilt","title":"array_tilt","text":"<p>Tilt of panels  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>flat</code> <code>low_slope</code> <code>medium_slope</code> <code>steep_slope</code>"},{"location":"hescore_json/system/","title":"System","text":"<p>hescore_json</p>"},{"location":"hescore_json/system/#system","title":"System","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title hvac hvac HVAC domestic_hot_water domestic_hot_water Domestic Hot Water generation generation Generation"},{"location":"hescore_json/system/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/system/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment"},{"location":"hescore_json/system/#hvac","title":"hvac","text":"<ul> <li>is required</li> <li>Type: hvac</li> </ul> <p>Minimum number of items: <code>0</code></p>"},{"location":"hescore_json/system/#domestic_hot_water","title":"domestic_hot_water","text":"<ul> <li>is required</li> <li>Type: domestic_hot_water</li> </ul>"},{"location":"hescore_json/system/#generation","title":"generation","text":"<ul> <li>is not required</li> <li>Type: generation</li> </ul>"},{"location":"hescore_json/zone/","title":"Zone","text":"<p>hescore_json</p>"},{"location":"hescore_json/zone/#zone","title":"Zone","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title zone_roof zone_roof Zone Roof zone_floor zone_floor Zone Floor zone_wall zone_wall Zone Wall"},{"location":"hescore_json/zone/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/zone/#zone_roof","title":"zone_roof","text":"<p>Inputs about the construction of the roof(s)  </p> <ul> <li>is required</li> <li>Type: zone_roof</li> </ul> <p>Minimum number of items: <code>0</code></p>"},{"location":"hescore_json/zone/#zone_floor","title":"zone_floor","text":"<p>Inputs about the construction of the floor(s)  </p> <ul> <li>is required</li> <li>Type: zone_floor</li> </ul> <p>Minimum number of items: <code>0</code></p>"},{"location":"hescore_json/zone/#zone_wall","title":"zone_wall","text":"<p>Inputs about the construction of the walls  </p> <ul> <li>is required</li> <li>Type: zone_wall</li> </ul> <p>Items should be unique: <code>True</code> Minimum number of items: <code>4</code></p>"},{"location":"hescore_json/zone_floor/","title":"Zone floor","text":"<p>hescore_json / zone</p>"},{"location":"hescore_json/zone_floor/#zone-floor","title":"Zone Floor","text":"<p>Type: array[zone_floor_item]</p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_1/","title":"Zone floor foundation type validation 1","text":"<p>zone_roof_type_validation_1 / zone_roof_type_validation_2</p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_1/#zone-floor-foundation-type-validation-1","title":"Zone Floor Foundation Type Validation 1","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title foundation_type <code>slab_on_grade</code>"},{"location":"hescore_json/zone_floor_foundation_type_validation_1/#foundation_type","title":"foundation_type","text":"<ul> <li>is required</li> <li>Type: <code>slab_on_grade</code></li> </ul> <p>Constant: <code>slab_on_grade</code></p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_2/","title":"Zone floor foundation type validation 2","text":"<p>zone_roof_type_validation_1 / zone_roof_type_validation_2 / zone_floor_foundation_type_validation_1</p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_2/#zone-floor-foundation-type-validation-2","title":"Zone Floor Foundation Type Validation 2","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title foundation_type <code>vented_crawl</code>"},{"location":"hescore_json/zone_floor_foundation_type_validation_2/#foundation_type","title":"foundation_type","text":"<ul> <li>is required</li> <li>Type: <code>vented_crawl</code></li> </ul> <p>Constant: <code>vented_crawl</code></p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_3/","title":"Zone floor foundation type validation 3","text":"<p>zone_roof_type_validation_1 / zone_roof_type_validation_2 / zone_floor_foundation_type_validation_1 / zone_floor_foundation_type_validation_2</p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_3/#zone-floor-foundation-type-validation-3","title":"Zone Floor Foundation Type Validation 3","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title foundation_type <code>unvented_crawl</code>"},{"location":"hescore_json/zone_floor_foundation_type_validation_3/#foundation_type","title":"foundation_type","text":"<ul> <li>is required</li> <li>Type: <code>unvented_crawl</code></li> </ul> <p>Constant: <code>unvented_crawl</code></p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_4/","title":"Zone floor foundation type validation 4","text":"<p>zone_roof_type_validation_1 / zone_roof_type_validation_2 / zone_floor_foundation_type_validation_1 / zone_floor_foundation_type_validation_2 / zone_floor_foundation_type_validation_3</p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_4/#zone-floor-foundation-type-validation-4","title":"Zone Floor Foundation Type Validation 4","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title foundation_type <code>uncond_basement</code>"},{"location":"hescore_json/zone_floor_foundation_type_validation_4/#foundation_type","title":"foundation_type","text":"<ul> <li>is required</li> <li>Type: <code>uncond_basement</code></li> </ul> <p>Constant: <code>uncond_basement</code></p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_5/","title":"Zone floor foundation type validation 5","text":"<p>zone_roof_type_validation_1 / zone_roof_type_validation_2 / zone_floor_foundation_type_validation_1 / zone_floor_foundation_type_validation_2 / zone_floor_foundation_type_validation_3 / zone_floor_foundation_type_validation_4 / zone_floor_foundation_type_validation_5</p>"},{"location":"hescore_json/zone_floor_foundation_type_validation_5/#zone-floor-foundation-type-validation-5","title":"Zone Floor Foundation Type Validation 5","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title foundation_type <code>belly_and_wing</code>"},{"location":"hescore_json/zone_floor_foundation_type_validation_5/#foundation_type","title":"foundation_type","text":"<ul> <li>is required</li> <li>Type: <code>belly_and_wing</code></li> </ul> <p>Constant: <code>belly_and_wing</code></p>"},{"location":"hescore_json/zone_floor_item/","title":"Zone floor item","text":"<p>hescore_json / zone / zone_floor</p>"},{"location":"hescore_json/zone_floor_item/#zone-floor-item","title":"Zone Floor Item","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title floor_name <code>enum</code> floor_area <code>number</code> foundation_type <code>string</code> foundation_insulation_level <code>integer</code> floor_assembly_code <code>enum</code>"},{"location":"hescore_json/zone_floor_item/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/zone_floor_item/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment floor_name is one of [<code>floor1</code>, <code>floor2</code>] AND if fields floor_name exists floor_area floor_name is one of [<code>floor1</code>, <code>floor2</code>] AND floor_area has exclusive minimum value of <code>0</code> AND if fields floor_name,floor_area exists foundation_type"},{"location":"hescore_json/zone_floor_item/#floor_name","title":"floor_name","text":"<p>Name of this floor instance  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>floor1</code> <code>floor2</code>"},{"location":"hescore_json/zone_floor_item/#floor_area","title":"floor_area","text":"<p>Area of this foundation type  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>1</code> Maximum Number: <code>25000</code></p>"},{"location":"hescore_json/zone_floor_item/#foundation_type","title":"foundation_type","text":"<p>Type of foundation  </p> <ul> <li>is not required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/zone_floor_item/#one-of","title":"One Of","text":"<p>Constant: <code>slab_on_grade</code> </p> <p>Constant: <code>uncond_basement</code> </p> <p>Constant: <code>cond_basement</code> </p> <p>Constant: <code>unvented_crawl</code> </p> <p>Constant: <code>vented_crawl</code> </p> <p>Constant: <code>above_other_unit</code> </p> <p>Constant: <code>belly_and_wing</code> </p>"},{"location":"hescore_json/zone_floor_item/#foundation_insulation_level","title":"foundation_insulation_level","text":"<p>Foundation wall / slab edge insulation R-value (sf-hr-F/Btu)  </p> <ul> <li>is not required</li> <li>Type: <code>integer</code></li> </ul> <p>Minimum Number: <code>0</code> Maximum Number: <code>19</code></p>"},{"location":"hescore_json/zone_floor_item/#floor_assembly_code","title":"floor_assembly_code","text":"<p>Floor construction assembly code (only used if foundation_type is not slab_on_grade, above_other_unit, or cond_basement)  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>efwf00ca</code> <code>efwf03ca</code> <code>efwf07ca</code> <code>efwf11ca</code> <code>efwf13ca</code> <code>efwf15ca</code> <code>efwf19ca</code> <code>efwf21ca</code> <code>efwf25ca</code> <code>efwf30ca</code> <code>efwf35ca</code> <code>efwf38ca</code> <code>efbw00</code> <code>efbw11</code> <code>efbw13</code> <code>efbw19</code> <code>efbw22</code> <code>efbw30</code>"},{"location":"hescore_json/zone_roof/","title":"Zone roof","text":"<p>hescore_json / zone</p>"},{"location":"hescore_json/zone_roof/#zone-roof","title":"Zone Roof","text":"<p>Type: array[zone_roof_item]</p>"},{"location":"hescore_json/zone_roof_item/","title":"Zone roof item","text":"<p>hescore_json / zone / zone_roof</p>"},{"location":"hescore_json/zone_roof_item/#zone-roof-item","title":"Zone Roof Item","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title roof_name <code>enum</code> ceiling_area <code>number</code> roof_area <code>number</code> roof_assembly_code <code>enum</code> roof_color <code>enum</code> roof_absorptance <code>number</code> roof_type <code>string</code> ceiling_assembly_code <code>enum</code> knee_wall knee_wall Knee Wall zone_skylight zone_skylight Zone Skylight"},{"location":"hescore_json/zone_roof_item/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/zone_roof_item/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment roof_type is one of [<code>vented_attic</code>, <code>cath_ceiling</code>, <code>flat_roof</code>, <code>bowstring_roof</code>] AND if fields roof_type exists roof_assembly_coderoof_color roof_type is not one of [<code>vented_attic</code>, <code>cath_ceiling</code>, <code>flat_roof</code>, <code>bowstring_roof</code>] AND if fields roof_type exists roof_color roof_type is <code>bowstring_roof</code> AND if fields roof_type exists roof_assembly_code roof_type is one of [<code>cath_ceiling</code>, <code>flat_roof</code>, <code>bowstring_roof</code>] AND if fields roof_type exists roof_area ceiling_areaceiling_assembly_code roof_type is <code>below_other_unit</code> AND if fields roof_type exists ceiling_area ceiling_assembly_coderoof_assembly_coderoof_areazone_skylight roof_type is <code>vented_attic</code> AND if fields roof_type exists ceiling_areaceiling_assembly_code roof_color is <code>cool_color</code> AND if fields roof_color exists roof_absorptance roof_color is not <code>cool_color</code> AND if fields roof_color exists roof_absorptance"},{"location":"hescore_json/zone_roof_item/#roof_name","title":"roof_name","text":"<p>Name of this roof instance  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>roof1</code> <code>roof2</code>"},{"location":"hescore_json/zone_roof_item/#ceiling_area","title":"ceiling_area","text":"<p>Area of ceiling (attic floor), used if roof_type = vented_attic, below_other_unit  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>1</code> Maximum Number: <code>25000</code></p>"},{"location":"hescore_json/zone_roof_item/#roof_area","title":"roof_area","text":"<p>Area of the roof, used if roof_type = cath_ceiling, flat_roof, bowstring_roof  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>1</code> Maximum Number: <code>25000</code></p>"},{"location":"hescore_json/zone_roof_item/#roof_assembly_code","title":"roof_assembly_code","text":"<p>Roof construction assembly code  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>rfwf00co</code> <code>rfwf00wo</code> <code>rfwf00rc</code> <code>rfwf00lc</code> <code>rfwf00tg</code> <code>rfwf03co</code> <code>rfwf03wo</code> <code>rfwf03rc</code> <code>rfwf03lc</code> <code>rfwf03tg</code> <code>rfwf07co</code> <code>rfwf07wo</code> <code>rfwf07rc</code> <code>rfwf07lc</code> <code>rfwf07tg</code> <code>rfwf11co</code> <code>rfwf11wo</code> <code>rfwf11rc</code> <code>rfwf11lc</code> <code>rfwf11tg</code> <code>rfwf13co</code> <code>rfwf13wo</code> <code>rfwf13rc</code> <code>rfwf13lc</code> <code>rfwf13tg</code> <code>rfwf15co</code> <code>rfwf15wo</code> <code>rfwf15rc</code> <code>rfwf15lc</code> <code>rfwf15tg</code> <code>rfwf19co</code> <code>rfwf19wo</code> <code>rfwf19rc</code> <code>rfwf19lc</code> <code>rfwf19tg</code> <code>rfwf21co</code> <code>rfwf21wo</code> <code>rfwf21rc</code> <code>rfwf21lc</code> <code>rfwf21tg</code> <code>rfwf25co</code> <code>rfwf25wo</code> <code>rfwf25rc</code> <code>rfwf25lc</code> <code>rfwf25tg</code> <code>rfwf27co</code> <code>rfwf27wo</code> <code>rfwf27rc</code> <code>rfwf27lc</code> <code>rfwf27tg</code> <code>rfwf30co</code> <code>rfwf30wo</code> <code>rfwf30rc</code> <code>rfwf30lc</code> <code>rfwf30tg</code> <code>rfrb00co</code> <code>rfrb00wo</code> <code>rfrb00rc</code> <code>rfrb00lc</code> <code>rfrb00tg</code> <code>rfps00co</code> <code>rfps00wo</code> <code>rfps00rc</code> <code>rfps00lc</code> <code>rfps00tg</code> <code>rfps03co</code> <code>rfps03wo</code> <code>rfps03rc</code> <code>rfps03lc</code> <code>rfps03tg</code> <code>rfps07co</code> <code>rfps07wo</code> <code>rfps07rc</code> <code>rfps07lc</code> <code>rfps07tg</code> <code>rfps11co</code> <code>rfps11wo</code> <code>rfps11rc</code> <code>rfps11lc</code> <code>rfps11tg</code> <code>rfps13co</code> <code>rfps13wo</code> <code>rfps13rc</code> <code>rfps13lc</code> <code>rfps13tg</code> <code>rfps15co</code> <code>rfps15wo</code> <code>rfps15rc</code> <code>rfps15lc</code> <code>rfps15tg</code> <code>rfps19co</code> <code>rfps19wo</code> <code>rfps19rc</code> <code>rfps19lc</code> <code>rfps19tg</code> <code>rfps21co</code> <code>rfps21wo</code> <code>rfps21rc</code> <code>rfps21lc</code> <code>rfps21tg</code>"},{"location":"hescore_json/zone_roof_item/#roof_color","title":"roof_color","text":"<p>Color of roof exterior surface  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>white</code> <code>light</code> <code>medium</code> <code>medium_dark</code> <code>dark</code> <code>cool_color</code>"},{"location":"hescore_json/zone_roof_item/#roof_absorptance","title":"roof_absorptance","text":"<p>Absorptance of exterior surface (only used if roof_color is cool_color)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>0</code> Maximum Number: <code>1</code></p>"},{"location":"hescore_json/zone_roof_item/#roof_type","title":"roof_type","text":"<p>Type of roof  </p> <ul> <li>is required</li> <li>Type: <code>string</code></li> </ul>"},{"location":"hescore_json/zone_roof_item/#one-of","title":"One Of","text":"<p>Constant: <code>vented_attic</code> </p> <p>Constant: <code>cath_ceiling</code> </p> <p>Constant: <code>below_other_unit</code> </p> <p>Constant: <code>flat_roof</code> </p> <p>Constant: <code>bowstring_roof</code> </p>"},{"location":"hescore_json/zone_roof_item/#ceiling_assembly_code","title":"ceiling_assembly_code","text":"<p>Ceiling construction assembly code (required unless roof_type is cath_ceiling)  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>ecwf00</code> <code>ecwf03</code> <code>ecwf06</code> <code>ecwf09</code> <code>ecwf11</code> <code>ecwf13</code> <code>ecwf15</code> <code>ecwf19</code> <code>ecwf21</code> <code>ecwf25</code> <code>ecwf30</code> <code>ecwf35</code> <code>ecwf38</code> <code>ecwf44</code> <code>ecwf49</code> <code>ecwf55</code> <code>ecwf60</code>"},{"location":"hescore_json/zone_roof_item/#knee_wall","title":"knee_wall","text":"<p>Knee wall inputs  </p> <ul> <li>is not required</li> <li>Type: knee_wall</li> </ul>"},{"location":"hescore_json/zone_roof_item/#zone_skylight","title":"zone_skylight","text":"<p>Inputs about the skylights on this roof  </p> <ul> <li>is not required</li> <li>Type: zone_skylight</li> </ul>"},{"location":"hescore_json/zone_roof_type_validation_1/","title":"Zone Roof Type Validation 1","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title roof_type <code>enum</code>"},{"location":"hescore_json/zone_roof_type_validation_1/#roof_type","title":"roof_type","text":"<ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>vented_attic</code> <code>cond_attic</code>"},{"location":"hescore_json/zone_roof_type_validation_2/","title":"Zone roof type validation 2","text":"<p>zone_roof_type_validation_1</p>"},{"location":"hescore_json/zone_roof_type_validation_2/#zone-roof-type-validation-2","title":"Zone Roof Type Validation 2","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>True</code> </p> Property Type Required Format Title roof_type <code>bowstring_roof</code>"},{"location":"hescore_json/zone_roof_type_validation_2/#roof_type","title":"roof_type","text":"<ul> <li>is required</li> <li>Type: <code>bowstring_roof</code></li> </ul> <p>Constant: <code>bowstring_roof</code></p>"},{"location":"hescore_json/zone_skylight/","title":"Zone skylight","text":"<p>hescore_json / zone / zone_roof / zone_roof_item</p>"},{"location":"hescore_json/zone_skylight/#zone-skylight","title":"Zone Skylight","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title skylight_area <code>number</code> skylight_method <code>enum</code> skylight_code <code>enum</code> skylight_u_value <code>number</code> skylight_shgc <code>number</code> solar_screen <code>boolean</code>"},{"location":"hescore_json/zone_skylight/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/zone_skylight/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment skylight_area has exclusive minimum value of <code>0</code> AND if fields skylight_area exists skylight_method skylight_area has exclusive minimum value of <code>0</code> AND skylight_method is <code>code</code> AND if fields skylight_area,skylight_method exists skylight_code skylight_u_valueskylight_shgc skylight_area has exclusive minimum value of <code>0</code> AND skylight_method is <code>custom</code> AND if fields skylight_area,skylight_method exists skylight_u_valueskylight_shgc skylight_code"},{"location":"hescore_json/zone_skylight/#skylight_area","title":"skylight_area","text":"<p>Area of skylights (square feet)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>0</code> Maximum Number: <code>300</code></p>"},{"location":"hescore_json/zone_skylight/#skylight_method","title":"skylight_method","text":"<p>Construction method to use for skylights  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>code</code> <code>custom</code>"},{"location":"hescore_json/zone_skylight/#skylight_code","title":"skylight_code","text":"<p>Assembly code for skylights (only used if skylight_method is code)  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>scna</code> <code>scnw</code> <code>stna</code> <code>stnw</code> <code>dcaa</code> <code>dcab</code> <code>dcaw</code> <code>dtaa</code> <code>dtab</code> <code>dtaw</code> <code>dpeaw</code> <code>dpeaab</code> <code>dpeaaw</code> <code>dseaa</code> <code>dseab</code> <code>dseaw</code> <code>dseaaw</code> <code>thmabw</code>"},{"location":"hescore_json/zone_skylight/#skylight_u_value","title":"skylight_u_value","text":"<p>U-value of skylights (Btu/sf-hr-F) (only used if skylight_method is custom)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>0.01</code> Maximum Number: <code>5</code></p>"},{"location":"hescore_json/zone_skylight/#skylight_shgc","title":"skylight_shgc","text":"<p>Solar heat gain coefficient of skylights (only used if skylight_method is custom)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Exclusive Minimum: <code>0</code></p>"},{"location":"hescore_json/zone_skylight/#solar_screen","title":"solar_screen","text":"<p>Does this skylight have a solar screen?  </p> <ul> <li>is not required</li> <li>Type: <code>boolean</code></li> </ul>"},{"location":"hescore_json/zone_wall/","title":"Zone wall","text":"<p>hescore_json / zone</p>"},{"location":"hescore_json/zone_wall/#zone-wall","title":"Zone Wall","text":"<p>Type: array[zone_wall_item]</p>"},{"location":"hescore_json/zone_wall_item/","title":"Zone wall item","text":"<p>hescore_json / zone / zone_wall</p>"},{"location":"hescore_json/zone_wall_item/#zone-wall-item","title":"Zone Wall Item","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title side <code>enum</code> wall_assembly_code <code>enum</code> adjacent_to <code>enum</code> zone_window zone_window Zone Window"},{"location":"hescore_json/zone_wall_item/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/zone_wall_item/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment adjacent_to is one of [<code>outside</code>, <code>other_heated_space</code>, <code>other_multifamily_buffer_space</code>, <code>other_non_freezing_space</code>] AND if fields adjacent_to exists wall_assembly_code adjacent_to is <code>other_unit</code> AND if fields adjacent_to exists wall_assembly_code adjacent_to is <code>outside</code> AND if fields adjacent_to exists zone_window adjacent_to is not <code>outside</code> AND if fields adjacent_to exists zone_window adjacent_to is one of [<code>other_heated_space</code>, <code>other_multifamily_buffer_space</code>, <code>other_non_freezing_space</code>] AND if fields adjacent_to exists wall_assembly_code"},{"location":"hescore_json/zone_wall_item/#side","title":"side","text":"<p>Side this wall faces  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>front</code> <code>back</code> <code>right</code> <code>left</code>"},{"location":"hescore_json/zone_wall_item/#wall_assembly_code","title":"wall_assembly_code","text":"<p>Wall construction assembly code  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>ewwf00wo</code> <code>ewwf00st</code> <code>ewwf00vi</code> <code>ewwf00al</code> <code>ewwf00br</code> <code>ewwf03wo</code> <code>ewwf03st</code> <code>ewwf03vi</code> <code>ewwf03al</code> <code>ewwf03br</code> <code>ewwf07wo</code> <code>ewwf07st</code> <code>ewwf07vi</code> <code>ewwf07al</code> <code>ewwf07br</code> <code>ewwf11wo</code> <code>ewwf11st</code> <code>ewwf11vi</code> <code>ewwf11al</code> <code>ewwf11br</code> <code>ewwf13wo</code> <code>ewwf13st</code> <code>ewwf13vi</code> <code>ewwf13al</code> <code>ewwf13br</code> <code>ewwf15wo</code> <code>ewwf15st</code> <code>ewwf15vi</code> <code>ewwf15al</code> <code>ewwf15br</code> <code>ewwf19wo</code> <code>ewwf19st</code> <code>ewwf19vi</code> <code>ewwf19al</code> <code>ewwf19br</code> <code>ewwf21wo</code> <code>ewwf21st</code> <code>ewwf21vi</code> <code>ewwf21al</code> <code>ewwf21br</code> <code>ewsf00wo</code> <code>ewsf00st</code> <code>ewsf00vi</code> <code>ewsf00al</code> <code>ewsf00br</code> <code>ewsf03wo</code> <code>ewsf03st</code> <code>ewsf03vi</code> <code>ewsf03al</code> <code>ewsf03br</code> <code>ewsf07wo</code> <code>ewsf07st</code> <code>ewsf07vi</code> <code>ewsf07al</code> <code>ewsf07br</code> <code>ewsf11wo</code> <code>ewsf11st</code> <code>ewsf11vi</code> <code>ewsf11al</code> <code>ewsf11br</code> <code>ewsf13wo</code> <code>ewsf13st</code> <code>ewsf13vi</code> <code>ewsf13al</code> <code>ewsf13br</code> <code>ewsf15wo</code> <code>ewsf15st</code> <code>ewsf15vi</code> <code>ewsf15al</code> <code>ewsf15br</code> <code>ewsf19wo</code> <code>ewsf19st</code> <code>ewsf19vi</code> <code>ewsf19al</code> <code>ewsf19br</code> <code>ewsf21wo</code> <code>ewsf21st</code> <code>ewsf21vi</code> <code>ewsf21al</code> <code>ewsf21br</code> <code>ewps00wo</code> <code>ewps00st</code> <code>ewps00vi</code> <code>ewps00al</code> <code>ewps00br</code> <code>ewps03wo</code> <code>ewps03st</code> <code>ewps03vi</code> <code>ewps03al</code> <code>ewps03br</code> <code>ewps07wo</code> <code>ewps07st</code> <code>ewps07vi</code> <code>ewps07al</code> <code>ewps07br</code> <code>ewps11wo</code> <code>ewps11st</code> <code>ewps11vi</code> <code>ewps11al</code> <code>ewps11br</code> <code>ewps13wo</code> <code>ewps13st</code> <code>ewps13vi</code> <code>ewps13al</code> <code>ewps13br</code> <code>ewps15wo</code> <code>ewps15st</code> <code>ewps15vi</code> <code>ewps15al</code> <code>ewps15br</code> <code>ewps19wo</code> <code>ewps19st</code> <code>ewps19vi</code> <code>ewps19al</code> <code>ewps19br</code> <code>ewps21wo</code> <code>ewps21st</code> <code>ewps21vi</code> <code>ewps21al</code> <code>ewps21br</code> <code>ewov19wo</code> <code>ewov19st</code> <code>ewov19vi</code> <code>ewov19al</code> <code>ewov19br</code> <code>ewov21wo</code> <code>ewov21st</code> <code>ewov21vi</code> <code>ewov21al</code> <code>ewov21br</code> <code>ewov25wo</code> <code>ewov25st</code> <code>ewov25vi</code> <code>ewov25al</code> <code>ewov25br</code> <code>ewov27wo</code> <code>ewov27st</code> <code>ewov27vi</code> <code>ewov27al</code> <code>ewov27br</code> <code>ewov33wo</code> <code>ewov33st</code> <code>ewov33vi</code> <code>ewov33al</code> <code>ewov33br</code> <code>ewov35wo</code> <code>ewov35st</code> <code>ewov35vi</code> <code>ewov35al</code> <code>ewov35br</code> <code>ewov38wo</code> <code>ewov38st</code> <code>ewov38vi</code> <code>ewov38al</code> <code>ewov38br</code> <code>ewbr00nn</code> <code>ewbr05nn</code> <code>ewbr10nn</code> <code>ewcb00st</code> <code>ewcb00br</code> <code>ewcb00nn</code> <code>ewcb03st</code> <code>ewcb03br</code> <code>ewcb03nn</code> <code>ewcb06st</code> <code>ewcb06br</code> <code>ewcb06nn</code> <code>ewsb00st</code> <code>iwwf00</code> <code>iwwf03</code> <code>iwwf07</code> <code>iwwf11</code> <code>iwwf13</code> <code>iwwf15</code> <code>iwwf19</code> <code>iwwf21</code>"},{"location":"hescore_json/zone_wall_item/#adjacent_to","title":"adjacent_to","text":"<p>What is on the other side of the wall  </p> <ul> <li>is required</li> <li>Type: <code>enum</code></li> </ul> Value <code>outside</code> <code>other_unit</code> <code>other_heated_space</code> <code>other_multifamily_buffer_space</code> <code>other_non_freezing_space</code>"},{"location":"hescore_json/zone_wall_item/#zone_window","title":"zone_window","text":"<p>Inputs about the windows on this wall  </p> <ul> <li>is not required</li> <li>Type: zone_window</li> </ul>"},{"location":"hescore_json/zone_window/","title":"Zone window","text":"<p>hescore_json / zone / zone_wall / zone_wall_item</p>"},{"location":"hescore_json/zone_window/#zone-window","title":"Zone Window","text":"<p>Type: <code>object</code> Additional Properties Allowed: <code>False</code> </p> Property Type Required Format Title window_area <code>number</code> window_method <code>enum</code> window_code <code>enum</code> window_u_value <code>number</code> window_shgc <code>number</code> solar_screen <code>boolean</code>"},{"location":"hescore_json/zone_window/#allof-requirement","title":"allOf Requirement","text":""},{"location":"hescore_json/zone_window/#conditional-validation","title":"Conditional Validation","text":"<code>if</code> <code>then</code> should be present should <code>not</code> be present comment window_area has exclusive minimum value of <code>0</code> AND window_method is <code>code</code> window_code window_u_valuewindow_shgc window_area has exclusive minimum value of <code>0</code> AND window_method is not <code>code</code> AND window_method is <code>custom</code> window_u_valuewindow_shgc window_code window_area has exclusive minimum value of <code>0</code> window_area"},{"location":"hescore_json/zone_window/#window_area","title":"window_area","text":"<p>Area of windows on this wall (square feet)  </p> <ul> <li>is required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>0</code> Maximum Number: <code>999</code></p>"},{"location":"hescore_json/zone_window/#window_method","title":"window_method","text":"<p>Construction method to use for this window  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>code</code> <code>custom</code>"},{"location":"hescore_json/zone_window/#window_code","title":"window_code","text":"<p>assembly code for this window (only used if window_method is code)  </p> <ul> <li>is not required</li> <li>Type: <code>enum</code></li> </ul> Value <code>scna</code> <code>scnw</code> <code>stna</code> <code>stnw</code> <code>dcaa</code> <code>dcab</code> <code>dcaw</code> <code>dtaa</code> <code>dtab</code> <code>dtaw</code> <code>dpeaw</code> <code>dpeaab</code> <code>dpeaaw</code> <code>dseaa</code> <code>dseab</code> <code>dseaw</code> <code>dseaaw</code> <code>thmabw</code>"},{"location":"hescore_json/zone_window/#window_u_value","title":"window_u_value","text":"<p>U-value of this window (Btu/sf-hr-F) (only used if window_method is custom)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Minimum Number: <code>0.01</code> Maximum Number: <code>5</code></p>"},{"location":"hescore_json/zone_window/#window_shgc","title":"window_shgc","text":"<p>Solar heat gain coefficient of this window (only used if window_method is custom)  </p> <ul> <li>is not required</li> <li>Type: <code>number</code></li> </ul> <p>Exclusive Minimum: <code>0</code></p>"},{"location":"hescore_json/zone_window/#solar_screen","title":"solar_screen","text":"<p>Does this window have a solar screen?  </p> <ul> <li>is not required</li> <li>Type: <code>boolean</code></li> </ul>"}]}
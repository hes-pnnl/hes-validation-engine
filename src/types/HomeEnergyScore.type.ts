/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type UnconditionedAttic = 'vented_attic';
export type CathedralCeiling = 'cath_ceiling';
export type BelowOtherUnit = 'below_other_unit';
export type FlatRoof = 'flat_roof';
export type ManufacturedHomeBowstringRoof = 'bowstring_roof';
export type SlabOnGradeFoundation = 'slab_on_grade';
export type UnconditionedBasement = 'uncond_basement';
export type ConditionedBasement = 'cond_basement';
export type UnventedCrawlspace = 'unvented_crawl';
export type VentedCrawlspace = 'vented_crawl';
export type AboveOtherUnit = 'above_other_unit';
export type ManufacturedHomeBellyAndWing = 'belly_and_wing';
export type None = 'none';
export type CentralFurnace = 'central_furnace';
export type RoomThroughTheWallFurnace = 'wall_furnace';
export type Boiler = 'boiler';
export type HeatPump = 'heat_pump';
export type BaseboardHeater = 'baseboard';
export type GroundCoupledHeatPump = 'gchp';
export type MinisplitDuctlessHeatPump = 'mini_split';
export type WoodStove = 'wood_stove';
export type Gas = 'natural_gas';
export type PropaneLPG = 'lpg';
export type Oil = 'fuel_oil';
export type Electric = 'electric';
export type Wood = 'cord_wood';
export type Pellets = 'pellet_wood';
export type RoomAirConditioner = 'packaged_dx';
export type CentralAirConditioner = 'split_dx';
export type ElectricHeatPump = 'heat_pump';
export type GroundCoupledHeatPump1 = 'gchp';
export type DirectEvaporativeCooling = 'dec';
export type MinisplitDuctlessHeatPump1 = 'mini_split';
export type None1 = 'none';
export type ConditionedSpace = 'cond_space';
export type UnconditionedBasement1 = 'uncond_basement';
export type VentedCrawlspace1 = 'vented_crawl';
export type UnventedCrawlspaceUnconditionedGarage = 'unvented_crawl';
export type UnconditionedAttic1 = 'uncond_attic';
export type UnderSlab = 'under_slab';
export type InExteriorWall = 'exterior_wall';
export type ManufacturdHomeBelly = 'manufactured_home_belly';
export type Outside = 'outside';
export type Storage = 'storage';
export type HeatPump1 = 'heat_pump';
export type IndirectTank = 'indirect';
export type TanklessCoil = 'tankless_coil';
export type Instantaneous = 'tankless';
export type Electric1 = 'electric';
export type NaturalGas = 'natural_gas';
export type LPG = 'lpg';
export type Oil1 = 'fuel_oil';

export interface HomeEnergyScore {
  building_unit: HEScoreJSONSchema;
  building_upgrades?: HEScoreUpgradesSchema;
}
export interface HEScoreJSONSchema {
  /**
   * The version of the building unit schema. Use semantic versioning.
   */
  version: '4.0';
  address: {
    address: string;
    address2?: string | null;
    city: string;
    state:
        | 'AL'
        | 'AK'
        | 'AZ'
        | 'AR'
        | 'CA'
        | 'CO'
        | 'CT'
        | 'DE'
        | 'FL'
        | 'GA'
        | 'HI'
        | 'ID'
        | 'IL'
        | 'IN'
        | 'IA'
        | 'KS'
        | 'KY'
        | 'LA'
        | 'ME'
        | 'MD'
        | 'MA'
        | 'MI'
        | 'MN'
        | 'MS'
        | 'MO'
        | 'MT'
        | 'NE'
        | 'NV'
        | 'NH'
        | 'NJ'
        | 'NM'
        | 'NY'
        | 'NC'
        | 'ND'
        | 'OH'
        | 'OK'
        | 'OR'
        | 'PA'
        | 'RI'
        | 'SC'
        | 'SD'
        | 'TN'
        | 'TX'
        | 'UT'
        | 'VT'
        | 'VA'
        | 'WA'
        | 'WV'
        | 'WI'
        | 'WY'
        | 'DC';
    zip_code: string;
    /**
     *  Allows an organization to assign an ID to the building for that organization's internal use. This field has no impact within the HES system, except that it can be filtered on in some of the retrieve_* methods.
     */
    external_building_id?: string;
  };
  hpwes?: {
    /**
     * The date on which HPwES upgrade installation began, in YYYY-MM-DD format
     */
    improvement_installation_start_date?: string;
    /**
     * The date on which HPwES upgrade installation was completed, in YYYY-MM-DD format
     */
    improvement_installation_completion_date?: string;
    /**
     * Five-digit postal code of the contractor installing the HPwES upgrades
     */
    contractor_zip_code?: string;
    /**
     * The name of the contracting business installing the HPwES upgrades
     */
    contractor_business_name?: string;
    /**
     * Whether or not the HPwES upgrades were performed for a homeowner participating in an income-eligible program
     */
    is_income_eligible_program?: boolean;
  };
  about: {
    assessment_type:
        | 'initial'
        | 'final'
        | 'qa'
        | 'alternative'
        | 'test'
        | 'corrected'
        | 'mentor'
        | 'preconstruction';
    /**
     * Date the assessment was performed
     */
    assessment_date: string;
    /**
     * Free text comment field
     */
    comments?: string | null;
    /**
     * Pass through field for use by api users
     */
    comment_api_only?: string;
    /**
     * The type of dwelling unit
     */
    dwelling_unit_type:
        | 'single_family_detached'
        | 'single_family_attached'
        | 'apartment_unit'
        | 'manufactured_home';
    /**
     * The sections of a manufactured home
     */
    manufactured_home_sections?: 'single-wide' | 'double-wide' | 'triple-wide';
    /**
     * Year building was built
     */
    year_built: number;
    /**
     * Number of bedrooms in house
     */
    number_bedrooms: number;
    /**
     * Number of floors above grade. Assumes 1 when dwelling_unit_type is apartment_unit
     */
    num_floor_above_grade?: number;
    /**
     * Floor to ceiling height (feet)
     */
    floor_to_ceiling_height:
        | 6
        | 6.5
        | 7
        | 7.5
        | 8
        | 8.5
        | 9
        | 9.5
        | 10
        | 10.5
        | 11
        | 11.5
        | 12
        | 12.5
        | 13
        | 13.5
        | 14
        | 14.5
        | 15;
    /**
     * Total conditioned floor area (square feet)
     */
    conditioned_floor_area: number;
    /**
     * Orientation of the front door
     */
    orientation: 'north' | 'north_east' | 'east' | 'south_east' | 'south' | 'south_west' | 'west' | 'north_west';
    /**
     * Was a blower door test performed on this house?
     */
    blower_door_test: boolean;
    /**
     * Has the building been air sealed?
     */
    air_sealing_present: boolean;
    /**
     * Building air leakage measured with a blower door (CFM50) (only used if blower_door_test is true)
     */
    envelope_leakage?: number;
  };
  zone: {
    /**
     * Inputs about the construction of the roof(s)
     *
     * @minItems 0
     * @maxItems 2
     */
    zone_roof:
        | []
        | [
      {
        /**
         * Name of this roof instance
         */
        roof_name: 'roof1' | 'roof2';
        /**
         * Area of ceiling (attic floor), used if roof_type = vented_attic, below_other_unit
         */
        ceiling_area?: number;
        /**
         * Area of the roof, used if roof_type = cath_ceiling, flat_roof, bowstring_roof
         */
        roof_area?: number;
        /**
         * Roof construction assembly code
         */
        roof_assembly_code?:
            | 'rfwf00co'
            | 'rfwf00wo'
            | 'rfwf00rc'
            | 'rfwf00lc'
            | 'rfwf00tg'
            | 'rfwf03co'
            | 'rfwf03wo'
            | 'rfwf03rc'
            | 'rfwf03lc'
            | 'rfwf03tg'
            | 'rfwf07co'
            | 'rfwf07wo'
            | 'rfwf07rc'
            | 'rfwf07lc'
            | 'rfwf07tg'
            | 'rfwf11co'
            | 'rfwf11wo'
            | 'rfwf11rc'
            | 'rfwf11lc'
            | 'rfwf11tg'
            | 'rfwf13co'
            | 'rfwf13wo'
            | 'rfwf13rc'
            | 'rfwf13lc'
            | 'rfwf13tg'
            | 'rfwf15co'
            | 'rfwf15wo'
            | 'rfwf15rc'
            | 'rfwf15lc'
            | 'rfwf15tg'
            | 'rfwf19co'
            | 'rfwf19wo'
            | 'rfwf19rc'
            | 'rfwf19lc'
            | 'rfwf19tg'
            | 'rfwf21co'
            | 'rfwf21wo'
            | 'rfwf21rc'
            | 'rfwf21lc'
            | 'rfwf21tg'
            | 'rfwf25co'
            | 'rfwf25wo'
            | 'rfwf25rc'
            | 'rfwf25lc'
            | 'rfwf25tg'
            | 'rfwf27co'
            | 'rfwf27wo'
            | 'rfwf27rc'
            | 'rfwf27lc'
            | 'rfwf27tg'
            | 'rfwf30co'
            | 'rfwf30wo'
            | 'rfwf30rc'
            | 'rfwf30lc'
            | 'rfwf30tg'
            | 'rfwf35co'
            | 'rfwf35wo'
            | 'rfwf35rc'
            | 'rfwf35lc'
            | 'rfwf35tg'
            | 'rfwf38co'
            | 'rfwf38wo'
            | 'rfwf38rc'
            | 'rfwf38lc'
            | 'rfwf38tg'
            | 'rfwf44co'
            | 'rfwf44wo'
            | 'rfwf44rc'
            | 'rfwf44lc'
            | 'rfwf44tg'
            | 'rfwf49co'
            | 'rfwf49wo'
            | 'rfwf49rc'
            | 'rfwf49lc'
            | 'rfwf49tg'
            | 'rfrb00co'
            | 'rfrb00wo'
            | 'rfrb00rc'
            | 'rfrb00lc'
            | 'rfrb00tg'
            | 'rfps00co'
            | 'rfps00wo'
            | 'rfps00rc'
            | 'rfps00lc'
            | 'rfps00tg'
            | 'rfps03co'
            | 'rfps03wo'
            | 'rfps03rc'
            | 'rfps03lc'
            | 'rfps03tg'
            | 'rfps07co'
            | 'rfps07wo'
            | 'rfps07rc'
            | 'rfps07lc'
            | 'rfps07tg'
            | 'rfps11co'
            | 'rfps11wo'
            | 'rfps11rc'
            | 'rfps11lc'
            | 'rfps11tg'
            | 'rfps13co'
            | 'rfps13wo'
            | 'rfps13rc'
            | 'rfps13lc'
            | 'rfps13tg'
            | 'rfps15co'
            | 'rfps15wo'
            | 'rfps15rc'
            | 'rfps15lc'
            | 'rfps15tg'
            | 'rfps19co'
            | 'rfps19wo'
            | 'rfps19rc'
            | 'rfps19lc'
            | 'rfps19tg'
            | 'rfps21co'
            | 'rfps21wo'
            | 'rfps21rc'
            | 'rfps21lc'
            | 'rfps21tg'
            | 'rfps25co'
            | 'rfps25wo'
            | 'rfps25rc'
            | 'rfps25lc'
            | 'rfps25tg'
            | 'rfps30co'
            | 'rfps30wo'
            | 'rfps30rc'
            | 'rfps30lc'
            | 'rfps30tg';
        /**
         * Color of roof exterior surface
         */
        roof_color?: 'white' | 'light' | 'medium' | 'medium_dark' | 'dark' | 'cool_color';
        /**
         * Absorptance of exterior surface (only used if roof_color is cool_color)
         */
        roof_absorptance?: number;
        /**
         * Type of roof
         */
        roof_type: (
            | UnconditionedAttic
            | CathedralCeiling
            | BelowOtherUnit
            | FlatRoof
            | ManufacturedHomeBowstringRoof
            ) &
            string;
        /**
         * Ceiling construction assembly code (required unless roof_type is cath_ceiling)
         */
        ceiling_assembly_code?:
            | 'ecwf00'
            | 'ecwf03'
            | 'ecwf06'
            | 'ecwf09'
            | 'ecwf11'
            | 'ecwf13'
            | 'ecwf15'
            | 'ecwf19'
            | 'ecwf21'
            | 'ecwf25'
            | 'ecwf30'
            | 'ecwf35'
            | 'ecwf38'
            | 'ecwf44'
            | 'ecwf49'
            | 'ecwf55'
            | 'ecwf60';
        /**
         * Knee wall inputs
         */
        knee_wall?: {
          /**
           * Knee wall area
           */
          area: number;
          /**
           * Knee wall assembly code
           */
          assembly_code:
              | 'kwwf00'
              | 'kwwf03'
              | 'kwwf07'
              | 'kwwf11'
              | 'kwwf13'
              | 'kwwf15'
              | 'kwwf19'
              | 'kwwf21';
        };
        /**
         * Inputs about the skylights on this roof
         */
        zone_skylight?: {
          /**
           * Area of skylights (square feet)
           */
          skylight_area: number;
          /**
           * Construction method to use for skylights
           */
          skylight_method: 'code' | 'custom';
          /**
           * Assembly code for skylights (only used if skylight_method is code)
           */
          skylight_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of skylights (Btu/sf-hr-F) (only used if skylight_method is custom)
           */
          skylight_u_value?: number;
          /**
           * Solar heat gain coefficient of skylights (only used if skylight_method is custom)
           */
          skylight_shgc?: number;
          /**
           * Does this skylight have a solar screen?
           */
          solar_screen?: boolean;
        };
      }
    ]
        | [
      {
        /**
         * Name of this roof instance
         */
        roof_name: 'roof1' | 'roof2';
        /**
         * Area of ceiling (attic floor), used if roof_type = vented_attic, below_other_unit
         */
        ceiling_area?: number;
        /**
         * Area of the roof, used if roof_type = cath_ceiling, flat_roof, bowstring_roof
         */
        roof_area?: number;
        /**
         * Roof construction assembly code
         */
        roof_assembly_code?:
            | 'rfwf00co'
            | 'rfwf00wo'
            | 'rfwf00rc'
            | 'rfwf00lc'
            | 'rfwf00tg'
            | 'rfwf03co'
            | 'rfwf03wo'
            | 'rfwf03rc'
            | 'rfwf03lc'
            | 'rfwf03tg'
            | 'rfwf07co'
            | 'rfwf07wo'
            | 'rfwf07rc'
            | 'rfwf07lc'
            | 'rfwf07tg'
            | 'rfwf11co'
            | 'rfwf11wo'
            | 'rfwf11rc'
            | 'rfwf11lc'
            | 'rfwf11tg'
            | 'rfwf13co'
            | 'rfwf13wo'
            | 'rfwf13rc'
            | 'rfwf13lc'
            | 'rfwf13tg'
            | 'rfwf15co'
            | 'rfwf15wo'
            | 'rfwf15rc'
            | 'rfwf15lc'
            | 'rfwf15tg'
            | 'rfwf19co'
            | 'rfwf19wo'
            | 'rfwf19rc'
            | 'rfwf19lc'
            | 'rfwf19tg'
            | 'rfwf21co'
            | 'rfwf21wo'
            | 'rfwf21rc'
            | 'rfwf21lc'
            | 'rfwf21tg'
            | 'rfwf25co'
            | 'rfwf25wo'
            | 'rfwf25rc'
            | 'rfwf25lc'
            | 'rfwf25tg'
            | 'rfwf27co'
            | 'rfwf27wo'
            | 'rfwf27rc'
            | 'rfwf27lc'
            | 'rfwf27tg'
            | 'rfwf30co'
            | 'rfwf30wo'
            | 'rfwf30rc'
            | 'rfwf30lc'
            | 'rfwf30tg'
            | 'rfwf35co'
            | 'rfwf35wo'
            | 'rfwf35rc'
            | 'rfwf35lc'
            | 'rfwf35tg'
            | 'rfwf38co'
            | 'rfwf38wo'
            | 'rfwf38rc'
            | 'rfwf38lc'
            | 'rfwf38tg'
            | 'rfwf44co'
            | 'rfwf44wo'
            | 'rfwf44rc'
            | 'rfwf44lc'
            | 'rfwf44tg'
            | 'rfwf49co'
            | 'rfwf49wo'
            | 'rfwf49rc'
            | 'rfwf49lc'
            | 'rfwf49tg'
            | 'rfrb00co'
            | 'rfrb00wo'
            | 'rfrb00rc'
            | 'rfrb00lc'
            | 'rfrb00tg'
            | 'rfps00co'
            | 'rfps00wo'
            | 'rfps00rc'
            | 'rfps00lc'
            | 'rfps00tg'
            | 'rfps03co'
            | 'rfps03wo'
            | 'rfps03rc'
            | 'rfps03lc'
            | 'rfps03tg'
            | 'rfps07co'
            | 'rfps07wo'
            | 'rfps07rc'
            | 'rfps07lc'
            | 'rfps07tg'
            | 'rfps11co'
            | 'rfps11wo'
            | 'rfps11rc'
            | 'rfps11lc'
            | 'rfps11tg'
            | 'rfps13co'
            | 'rfps13wo'
            | 'rfps13rc'
            | 'rfps13lc'
            | 'rfps13tg'
            | 'rfps15co'
            | 'rfps15wo'
            | 'rfps15rc'
            | 'rfps15lc'
            | 'rfps15tg'
            | 'rfps19co'
            | 'rfps19wo'
            | 'rfps19rc'
            | 'rfps19lc'
            | 'rfps19tg'
            | 'rfps21co'
            | 'rfps21wo'
            | 'rfps21rc'
            | 'rfps21lc'
            | 'rfps21tg'
            | 'rfps25co'
            | 'rfps25wo'
            | 'rfps25rc'
            | 'rfps25lc'
            | 'rfps25tg'
            | 'rfps30co'
            | 'rfps30wo'
            | 'rfps30rc'
            | 'rfps30lc'
            | 'rfps30tg';
        /**
         * Color of roof exterior surface
         */
        roof_color?: 'white' | 'light' | 'medium' | 'medium_dark' | 'dark' | 'cool_color';
        /**
         * Absorptance of exterior surface (only used if roof_color is cool_color)
         */
        roof_absorptance?: number;
        /**
         * Type of roof
         */
        roof_type: (
            | UnconditionedAttic
            | CathedralCeiling
            | BelowOtherUnit
            | FlatRoof
            | ManufacturedHomeBowstringRoof
            ) &
            string;
        /**
         * Ceiling construction assembly code (required unless roof_type is cath_ceiling)
         */
        ceiling_assembly_code?:
            | 'ecwf00'
            | 'ecwf03'
            | 'ecwf06'
            | 'ecwf09'
            | 'ecwf11'
            | 'ecwf13'
            | 'ecwf15'
            | 'ecwf19'
            | 'ecwf21'
            | 'ecwf25'
            | 'ecwf30'
            | 'ecwf35'
            | 'ecwf38'
            | 'ecwf44'
            | 'ecwf49'
            | 'ecwf55'
            | 'ecwf60';
        /**
         * Knee wall inputs
         */
        knee_wall?: {
          /**
           * Knee wall area
           */
          area: number;
          /**
           * Knee wall assembly code
           */
          assembly_code:
              | 'kwwf00'
              | 'kwwf03'
              | 'kwwf07'
              | 'kwwf11'
              | 'kwwf13'
              | 'kwwf15'
              | 'kwwf19'
              | 'kwwf21';
        };
        /**
         * Inputs about the skylights on this roof
         */
        zone_skylight?: {
          /**
           * Area of skylights (square feet)
           */
          skylight_area: number;
          /**
           * Construction method to use for skylights
           */
          skylight_method: 'code' | 'custom';
          /**
           * Assembly code for skylights (only used if skylight_method is code)
           */
          skylight_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of skylights (Btu/sf-hr-F) (only used if skylight_method is custom)
           */
          skylight_u_value?: number;
          /**
           * Solar heat gain coefficient of skylights (only used if skylight_method is custom)
           */
          skylight_shgc?: number;
          /**
           * Does this skylight have a solar screen?
           */
          solar_screen?: boolean;
        };
      },
      {
        /**
         * Name of this roof instance
         */
        roof_name: 'roof1' | 'roof2';
        /**
         * Area of ceiling (attic floor), used if roof_type = vented_attic, below_other_unit
         */
        ceiling_area?: number;
        /**
         * Area of the roof, used if roof_type = cath_ceiling, flat_roof, bowstring_roof
         */
        roof_area?: number;
        /**
         * Roof construction assembly code
         */
        roof_assembly_code?:
            | 'rfwf00co'
            | 'rfwf00wo'
            | 'rfwf00rc'
            | 'rfwf00lc'
            | 'rfwf00tg'
            | 'rfwf03co'
            | 'rfwf03wo'
            | 'rfwf03rc'
            | 'rfwf03lc'
            | 'rfwf03tg'
            | 'rfwf07co'
            | 'rfwf07wo'
            | 'rfwf07rc'
            | 'rfwf07lc'
            | 'rfwf07tg'
            | 'rfwf11co'
            | 'rfwf11wo'
            | 'rfwf11rc'
            | 'rfwf11lc'
            | 'rfwf11tg'
            | 'rfwf13co'
            | 'rfwf13wo'
            | 'rfwf13rc'
            | 'rfwf13lc'
            | 'rfwf13tg'
            | 'rfwf15co'
            | 'rfwf15wo'
            | 'rfwf15rc'
            | 'rfwf15lc'
            | 'rfwf15tg'
            | 'rfwf19co'
            | 'rfwf19wo'
            | 'rfwf19rc'
            | 'rfwf19lc'
            | 'rfwf19tg'
            | 'rfwf21co'
            | 'rfwf21wo'
            | 'rfwf21rc'
            | 'rfwf21lc'
            | 'rfwf21tg'
            | 'rfwf25co'
            | 'rfwf25wo'
            | 'rfwf25rc'
            | 'rfwf25lc'
            | 'rfwf25tg'
            | 'rfwf27co'
            | 'rfwf27wo'
            | 'rfwf27rc'
            | 'rfwf27lc'
            | 'rfwf27tg'
            | 'rfwf30co'
            | 'rfwf30wo'
            | 'rfwf30rc'
            | 'rfwf30lc'
            | 'rfwf30tg'
            | 'rfwf35co'
            | 'rfwf35wo'
            | 'rfwf35rc'
            | 'rfwf35lc'
            | 'rfwf35tg'
            | 'rfwf38co'
            | 'rfwf38wo'
            | 'rfwf38rc'
            | 'rfwf38lc'
            | 'rfwf38tg'
            | 'rfwf44co'
            | 'rfwf44wo'
            | 'rfwf44rc'
            | 'rfwf44lc'
            | 'rfwf44tg'
            | 'rfwf49co'
            | 'rfwf49wo'
            | 'rfwf49rc'
            | 'rfwf49lc'
            | 'rfwf49tg'
            | 'rfrb00co'
            | 'rfrb00wo'
            | 'rfrb00rc'
            | 'rfrb00lc'
            | 'rfrb00tg'
            | 'rfps00co'
            | 'rfps00wo'
            | 'rfps00rc'
            | 'rfps00lc'
            | 'rfps00tg'
            | 'rfps03co'
            | 'rfps03wo'
            | 'rfps03rc'
            | 'rfps03lc'
            | 'rfps03tg'
            | 'rfps07co'
            | 'rfps07wo'
            | 'rfps07rc'
            | 'rfps07lc'
            | 'rfps07tg'
            | 'rfps11co'
            | 'rfps11wo'
            | 'rfps11rc'
            | 'rfps11lc'
            | 'rfps11tg'
            | 'rfps13co'
            | 'rfps13wo'
            | 'rfps13rc'
            | 'rfps13lc'
            | 'rfps13tg'
            | 'rfps15co'
            | 'rfps15wo'
            | 'rfps15rc'
            | 'rfps15lc'
            | 'rfps15tg'
            | 'rfps19co'
            | 'rfps19wo'
            | 'rfps19rc'
            | 'rfps19lc'
            | 'rfps19tg'
            | 'rfps21co'
            | 'rfps21wo'
            | 'rfps21rc'
            | 'rfps21lc'
            | 'rfps21tg'
            | 'rfps25co'
            | 'rfps25wo'
            | 'rfps25rc'
            | 'rfps25lc'
            | 'rfps25tg'
            | 'rfps30co'
            | 'rfps30wo'
            | 'rfps30rc'
            | 'rfps30lc'
            | 'rfps30tg';
        /**
         * Color of roof exterior surface
         */
        roof_color?: 'white' | 'light' | 'medium' | 'medium_dark' | 'dark' | 'cool_color';
        /**
         * Absorptance of exterior surface (only used if roof_color is cool_color)
         */
        roof_absorptance?: number;
        /**
         * Type of roof
         */
        roof_type: (
            | UnconditionedAttic
            | CathedralCeiling
            | BelowOtherUnit
            | FlatRoof
            | ManufacturedHomeBowstringRoof
            ) &
            string;
        /**
         * Ceiling construction assembly code (required unless roof_type is cath_ceiling)
         */
        ceiling_assembly_code?:
            | 'ecwf00'
            | 'ecwf03'
            | 'ecwf06'
            | 'ecwf09'
            | 'ecwf11'
            | 'ecwf13'
            | 'ecwf15'
            | 'ecwf19'
            | 'ecwf21'
            | 'ecwf25'
            | 'ecwf30'
            | 'ecwf35'
            | 'ecwf38'
            | 'ecwf44'
            | 'ecwf49'
            | 'ecwf55'
            | 'ecwf60';
        /**
         * Knee wall inputs
         */
        knee_wall?: {
          /**
           * Knee wall area
           */
          area: number;
          /**
           * Knee wall assembly code
           */
          assembly_code:
              | 'kwwf00'
              | 'kwwf03'
              | 'kwwf07'
              | 'kwwf11'
              | 'kwwf13'
              | 'kwwf15'
              | 'kwwf19'
              | 'kwwf21';
        };
        /**
         * Inputs about the skylights on this roof
         */
        zone_skylight?: {
          /**
           * Area of skylights (square feet)
           */
          skylight_area: number;
          /**
           * Construction method to use for skylights
           */
          skylight_method: 'code' | 'custom';
          /**
           * Assembly code for skylights (only used if skylight_method is code)
           */
          skylight_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of skylights (Btu/sf-hr-F) (only used if skylight_method is custom)
           */
          skylight_u_value?: number;
          /**
           * Solar heat gain coefficient of skylights (only used if skylight_method is custom)
           */
          skylight_shgc?: number;
          /**
           * Does this skylight have a solar screen?
           */
          solar_screen?: boolean;
        };
      }
    ];
    /**
     * Inputs about the construction of the floor(s)
     *
     * @minItems 0
     * @maxItems 2
     */
    zone_floor:
        | []
        | [
      {
        /**
         * Name of this floor instance
         */
        floor_name: 'floor1' | 'floor2';
        /**
         * Area of this foundation type
         */
        floor_area: number;
        /**
         * Type of foundation
         */
        foundation_type: (
            | SlabOnGradeFoundation
            | UnconditionedBasement
            | ConditionedBasement
            | UnventedCrawlspace
            | VentedCrawlspace
            | AboveOtherUnit
            | ManufacturedHomeBellyAndWing
            ) &
            string;
        /**
         * Foundation wall / slab edge insulation R-value (sf-hr-F/Btu)
         */
        foundation_insulation_level?: number;
        /**
         * Floor construction assembly code (only used if foundation_type is not slab_on_grade, above_other_unit, or cond_basement)
         */
        floor_assembly_code?:
            | 'efwf00ca'
            | 'efwf03ca'
            | 'efwf07ca'
            | 'efwf11ca'
            | 'efwf13ca'
            | 'efwf15ca'
            | 'efwf19ca'
            | 'efwf21ca'
            | 'efwf25ca'
            | 'efwf30ca'
            | 'efwf35ca'
            | 'efwf38ca'
            | 'efbw00'
            | 'efbw11'
            | 'efbw13'
            | 'efbw19'
            | 'efbw22'
            | 'efbw30';
      }
    ]
        | [
      {
        /**
         * Name of this floor instance
         */
        floor_name: 'floor1' | 'floor2';
        /**
         * Area of this foundation type
         */
        floor_area: number;
        /**
         * Type of foundation
         */
        foundation_type: (
            | SlabOnGradeFoundation
            | UnconditionedBasement
            | ConditionedBasement
            | UnventedCrawlspace
            | VentedCrawlspace
            | AboveOtherUnit
            | ManufacturedHomeBellyAndWing
            ) &
            string;
        /**
         * Foundation wall / slab edge insulation R-value (sf-hr-F/Btu)
         */
        foundation_insulation_level?: number;
        /**
         * Floor construction assembly code (only used if foundation_type is not slab_on_grade, above_other_unit, or cond_basement)
         */
        floor_assembly_code?:
            | 'efwf00ca'
            | 'efwf03ca'
            | 'efwf07ca'
            | 'efwf11ca'
            | 'efwf13ca'
            | 'efwf15ca'
            | 'efwf19ca'
            | 'efwf21ca'
            | 'efwf25ca'
            | 'efwf30ca'
            | 'efwf35ca'
            | 'efwf38ca'
            | 'efbw00'
            | 'efbw11'
            | 'efbw13'
            | 'efbw19'
            | 'efbw22'
            | 'efbw30';
      },
      {
        /**
         * Name of this floor instance
         */
        floor_name: 'floor1' | 'floor2';
        /**
         * Area of this foundation type
         */
        floor_area: number;
        /**
         * Type of foundation
         */
        foundation_type: (
            | SlabOnGradeFoundation
            | UnconditionedBasement
            | ConditionedBasement
            | UnventedCrawlspace
            | VentedCrawlspace
            | AboveOtherUnit
            | ManufacturedHomeBellyAndWing
            ) &
            string;
        /**
         * Foundation wall / slab edge insulation R-value (sf-hr-F/Btu)
         */
        foundation_insulation_level?: number;
        /**
         * Floor construction assembly code (only used if foundation_type is not slab_on_grade, above_other_unit, or cond_basement)
         */
        floor_assembly_code?:
            | 'efwf00ca'
            | 'efwf03ca'
            | 'efwf07ca'
            | 'efwf11ca'
            | 'efwf13ca'
            | 'efwf15ca'
            | 'efwf19ca'
            | 'efwf21ca'
            | 'efwf25ca'
            | 'efwf30ca'
            | 'efwf35ca'
            | 'efwf38ca'
            | 'efbw00'
            | 'efbw11'
            | 'efbw13'
            | 'efbw19'
            | 'efbw22'
            | 'efbw30';
      }
    ];
    /**
     * Inputs about the construction of the walls
     *
     * @minItems 4
     * @maxItems 4
     */
    zone_wall: [
      {
        /**
         * Side this wall faces
         */
        side: 'front' | 'back' | 'right' | 'left';
        /**
         * Wall construction assembly code
         */
        wall_assembly_code?:
            | 'ewwf00wo'
            | 'ewwf00st'
            | 'ewwf00vi'
            | 'ewwf00al'
            | 'ewwf00br'
            | 'ewwf03wo'
            | 'ewwf03st'
            | 'ewwf03vi'
            | 'ewwf03al'
            | 'ewwf03br'
            | 'ewwf07wo'
            | 'ewwf07st'
            | 'ewwf07vi'
            | 'ewwf07al'
            | 'ewwf07br'
            | 'ewwf11wo'
            | 'ewwf11st'
            | 'ewwf11vi'
            | 'ewwf11al'
            | 'ewwf11br'
            | 'ewwf13wo'
            | 'ewwf13st'
            | 'ewwf13vi'
            | 'ewwf13al'
            | 'ewwf13br'
            | 'ewwf15wo'
            | 'ewwf15st'
            | 'ewwf15vi'
            | 'ewwf15al'
            | 'ewwf15br'
            | 'ewwf19wo'
            | 'ewwf19st'
            | 'ewwf19vi'
            | 'ewwf19al'
            | 'ewwf19br'
            | 'ewwf21wo'
            | 'ewwf21st'
            | 'ewwf21vi'
            | 'ewwf21al'
            | 'ewwf21br'
            | 'ewsf00wo'
            | 'ewsf00st'
            | 'ewsf00vi'
            | 'ewsf00al'
            | 'ewsf00br'
            | 'ewsf03wo'
            | 'ewsf03st'
            | 'ewsf03vi'
            | 'ewsf03al'
            | 'ewsf03br'
            | 'ewsf07wo'
            | 'ewsf07st'
            | 'ewsf07vi'
            | 'ewsf07al'
            | 'ewsf07br'
            | 'ewsf11wo'
            | 'ewsf11st'
            | 'ewsf11vi'
            | 'ewsf11al'
            | 'ewsf11br'
            | 'ewsf13wo'
            | 'ewsf13st'
            | 'ewsf13vi'
            | 'ewsf13al'
            | 'ewsf13br'
            | 'ewsf15wo'
            | 'ewsf15st'
            | 'ewsf15vi'
            | 'ewsf15al'
            | 'ewsf15br'
            | 'ewsf19wo'
            | 'ewsf19st'
            | 'ewsf19vi'
            | 'ewsf19al'
            | 'ewsf19br'
            | 'ewsf21wo'
            | 'ewsf21st'
            | 'ewsf21vi'
            | 'ewsf21al'
            | 'ewsf21br'
            | 'ewps00wo'
            | 'ewps00st'
            | 'ewps00vi'
            | 'ewps00al'
            | 'ewps00br'
            | 'ewps03wo'
            | 'ewps03st'
            | 'ewps03vi'
            | 'ewps03al'
            | 'ewps03br'
            | 'ewps07wo'
            | 'ewps07st'
            | 'ewps07vi'
            | 'ewps07al'
            | 'ewps07br'
            | 'ewps11wo'
            | 'ewps11st'
            | 'ewps11vi'
            | 'ewps11al'
            | 'ewps11br'
            | 'ewps13wo'
            | 'ewps13st'
            | 'ewps13vi'
            | 'ewps13al'
            | 'ewps13br'
            | 'ewps15wo'
            | 'ewps15st'
            | 'ewps15vi'
            | 'ewps15al'
            | 'ewps15br'
            | 'ewps19wo'
            | 'ewps19st'
            | 'ewps19vi'
            | 'ewps19al'
            | 'ewps19br'
            | 'ewps21wo'
            | 'ewps21st'
            | 'ewps21vi'
            | 'ewps21al'
            | 'ewps21br'
            | 'ewov19wo'
            | 'ewov19st'
            | 'ewov19vi'
            | 'ewov19al'
            | 'ewov19br'
            | 'ewov21wo'
            | 'ewov21st'
            | 'ewov21vi'
            | 'ewov21al'
            | 'ewov21br'
            | 'ewov25wo'
            | 'ewov25st'
            | 'ewov25vi'
            | 'ewov25al'
            | 'ewov25br'
            | 'ewov27wo'
            | 'ewov27st'
            | 'ewov27vi'
            | 'ewov27al'
            | 'ewov27br'
            | 'ewov33wo'
            | 'ewov33st'
            | 'ewov33vi'
            | 'ewov33al'
            | 'ewov33br'
            | 'ewov35wo'
            | 'ewov35st'
            | 'ewov35vi'
            | 'ewov35al'
            | 'ewov35br'
            | 'ewov38wo'
            | 'ewov38st'
            | 'ewov38vi'
            | 'ewov38al'
            | 'ewov38br'
            | 'ewbr00nn'
            | 'ewbr05nn'
            | 'ewbr10nn'
            | 'ewcb00st'
            | 'ewcb00br'
            | 'ewcb00nn'
            | 'ewcb03st'
            | 'ewcb03br'
            | 'ewcb03nn'
            | 'ewcb06st'
            | 'ewcb06br'
            | 'ewcb06nn'
            | 'ewsb00st'
            | 'iwwf00'
            | 'iwwf03'
            | 'iwwf07'
            | 'iwwf11'
            | 'iwwf13'
            | 'iwwf15'
            | 'iwwf19'
            | 'iwwf21';
        /**
         * What is on the other side of the wall
         */
        adjacent_to:
            | 'outside'
            | 'other_unit'
            | 'other_heated_space'
            | 'other_multifamily_buffer_space'
            | 'other_non_freezing_space';
        /**
         * Inputs about the windows on this wall
         */
        zone_window?: {
          /**
           * Area of windows on this wall (square feet)
           */
          window_area: number;
          /**
           * Construction method to use for this window
           */
          window_method?: 'code' | 'custom';
          /**
           * assembly code for this window (only used if window_method is code)
           */
          window_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of this window (Btu/sf-hr-F) (only used if window_method is custom)
           */
          window_u_value?: number;
          /**
           * Solar heat gain coefficient of this window (only used if window_method is custom)
           */
          window_shgc?: number;
          /**
           * Does this window have a solar screen?
           */
          solar_screen?: boolean;
        };
      },
      {
        /**
         * Side this wall faces
         */
        side: 'front' | 'back' | 'right' | 'left';
        /**
         * Wall construction assembly code
         */
        wall_assembly_code?:
            | 'ewwf00wo'
            | 'ewwf00st'
            | 'ewwf00vi'
            | 'ewwf00al'
            | 'ewwf00br'
            | 'ewwf03wo'
            | 'ewwf03st'
            | 'ewwf03vi'
            | 'ewwf03al'
            | 'ewwf03br'
            | 'ewwf07wo'
            | 'ewwf07st'
            | 'ewwf07vi'
            | 'ewwf07al'
            | 'ewwf07br'
            | 'ewwf11wo'
            | 'ewwf11st'
            | 'ewwf11vi'
            | 'ewwf11al'
            | 'ewwf11br'
            | 'ewwf13wo'
            | 'ewwf13st'
            | 'ewwf13vi'
            | 'ewwf13al'
            | 'ewwf13br'
            | 'ewwf15wo'
            | 'ewwf15st'
            | 'ewwf15vi'
            | 'ewwf15al'
            | 'ewwf15br'
            | 'ewwf19wo'
            | 'ewwf19st'
            | 'ewwf19vi'
            | 'ewwf19al'
            | 'ewwf19br'
            | 'ewwf21wo'
            | 'ewwf21st'
            | 'ewwf21vi'
            | 'ewwf21al'
            | 'ewwf21br'
            | 'ewsf00wo'
            | 'ewsf00st'
            | 'ewsf00vi'
            | 'ewsf00al'
            | 'ewsf00br'
            | 'ewsf03wo'
            | 'ewsf03st'
            | 'ewsf03vi'
            | 'ewsf03al'
            | 'ewsf03br'
            | 'ewsf07wo'
            | 'ewsf07st'
            | 'ewsf07vi'
            | 'ewsf07al'
            | 'ewsf07br'
            | 'ewsf11wo'
            | 'ewsf11st'
            | 'ewsf11vi'
            | 'ewsf11al'
            | 'ewsf11br'
            | 'ewsf13wo'
            | 'ewsf13st'
            | 'ewsf13vi'
            | 'ewsf13al'
            | 'ewsf13br'
            | 'ewsf15wo'
            | 'ewsf15st'
            | 'ewsf15vi'
            | 'ewsf15al'
            | 'ewsf15br'
            | 'ewsf19wo'
            | 'ewsf19st'
            | 'ewsf19vi'
            | 'ewsf19al'
            | 'ewsf19br'
            | 'ewsf21wo'
            | 'ewsf21st'
            | 'ewsf21vi'
            | 'ewsf21al'
            | 'ewsf21br'
            | 'ewps00wo'
            | 'ewps00st'
            | 'ewps00vi'
            | 'ewps00al'
            | 'ewps00br'
            | 'ewps03wo'
            | 'ewps03st'
            | 'ewps03vi'
            | 'ewps03al'
            | 'ewps03br'
            | 'ewps07wo'
            | 'ewps07st'
            | 'ewps07vi'
            | 'ewps07al'
            | 'ewps07br'
            | 'ewps11wo'
            | 'ewps11st'
            | 'ewps11vi'
            | 'ewps11al'
            | 'ewps11br'
            | 'ewps13wo'
            | 'ewps13st'
            | 'ewps13vi'
            | 'ewps13al'
            | 'ewps13br'
            | 'ewps15wo'
            | 'ewps15st'
            | 'ewps15vi'
            | 'ewps15al'
            | 'ewps15br'
            | 'ewps19wo'
            | 'ewps19st'
            | 'ewps19vi'
            | 'ewps19al'
            | 'ewps19br'
            | 'ewps21wo'
            | 'ewps21st'
            | 'ewps21vi'
            | 'ewps21al'
            | 'ewps21br'
            | 'ewov19wo'
            | 'ewov19st'
            | 'ewov19vi'
            | 'ewov19al'
            | 'ewov19br'
            | 'ewov21wo'
            | 'ewov21st'
            | 'ewov21vi'
            | 'ewov21al'
            | 'ewov21br'
            | 'ewov25wo'
            | 'ewov25st'
            | 'ewov25vi'
            | 'ewov25al'
            | 'ewov25br'
            | 'ewov27wo'
            | 'ewov27st'
            | 'ewov27vi'
            | 'ewov27al'
            | 'ewov27br'
            | 'ewov33wo'
            | 'ewov33st'
            | 'ewov33vi'
            | 'ewov33al'
            | 'ewov33br'
            | 'ewov35wo'
            | 'ewov35st'
            | 'ewov35vi'
            | 'ewov35al'
            | 'ewov35br'
            | 'ewov38wo'
            | 'ewov38st'
            | 'ewov38vi'
            | 'ewov38al'
            | 'ewov38br'
            | 'ewbr00nn'
            | 'ewbr05nn'
            | 'ewbr10nn'
            | 'ewcb00st'
            | 'ewcb00br'
            | 'ewcb00nn'
            | 'ewcb03st'
            | 'ewcb03br'
            | 'ewcb03nn'
            | 'ewcb06st'
            | 'ewcb06br'
            | 'ewcb06nn'
            | 'ewsb00st'
            | 'iwwf00'
            | 'iwwf03'
            | 'iwwf07'
            | 'iwwf11'
            | 'iwwf13'
            | 'iwwf15'
            | 'iwwf19'
            | 'iwwf21';
        /**
         * What is on the other side of the wall
         */
        adjacent_to:
            | 'outside'
            | 'other_unit'
            | 'other_heated_space'
            | 'other_multifamily_buffer_space'
            | 'other_non_freezing_space';
        /**
         * Inputs about the windows on this wall
         */
        zone_window?: {
          /**
           * Area of windows on this wall (square feet)
           */
          window_area: number;
          /**
           * Construction method to use for this window
           */
          window_method?: 'code' | 'custom';
          /**
           * assembly code for this window (only used if window_method is code)
           */
          window_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of this window (Btu/sf-hr-F) (only used if window_method is custom)
           */
          window_u_value?: number;
          /**
           * Solar heat gain coefficient of this window (only used if window_method is custom)
           */
          window_shgc?: number;
          /**
           * Does this window have a solar screen?
           */
          solar_screen?: boolean;
        };
      },
      {
        /**
         * Side this wall faces
         */
        side: 'front' | 'back' | 'right' | 'left';
        /**
         * Wall construction assembly code
         */
        wall_assembly_code?:
            | 'ewwf00wo'
            | 'ewwf00st'
            | 'ewwf00vi'
            | 'ewwf00al'
            | 'ewwf00br'
            | 'ewwf03wo'
            | 'ewwf03st'
            | 'ewwf03vi'
            | 'ewwf03al'
            | 'ewwf03br'
            | 'ewwf07wo'
            | 'ewwf07st'
            | 'ewwf07vi'
            | 'ewwf07al'
            | 'ewwf07br'
            | 'ewwf11wo'
            | 'ewwf11st'
            | 'ewwf11vi'
            | 'ewwf11al'
            | 'ewwf11br'
            | 'ewwf13wo'
            | 'ewwf13st'
            | 'ewwf13vi'
            | 'ewwf13al'
            | 'ewwf13br'
            | 'ewwf15wo'
            | 'ewwf15st'
            | 'ewwf15vi'
            | 'ewwf15al'
            | 'ewwf15br'
            | 'ewwf19wo'
            | 'ewwf19st'
            | 'ewwf19vi'
            | 'ewwf19al'
            | 'ewwf19br'
            | 'ewwf21wo'
            | 'ewwf21st'
            | 'ewwf21vi'
            | 'ewwf21al'
            | 'ewwf21br'
            | 'ewsf00wo'
            | 'ewsf00st'
            | 'ewsf00vi'
            | 'ewsf00al'
            | 'ewsf00br'
            | 'ewsf03wo'
            | 'ewsf03st'
            | 'ewsf03vi'
            | 'ewsf03al'
            | 'ewsf03br'
            | 'ewsf07wo'
            | 'ewsf07st'
            | 'ewsf07vi'
            | 'ewsf07al'
            | 'ewsf07br'
            | 'ewsf11wo'
            | 'ewsf11st'
            | 'ewsf11vi'
            | 'ewsf11al'
            | 'ewsf11br'
            | 'ewsf13wo'
            | 'ewsf13st'
            | 'ewsf13vi'
            | 'ewsf13al'
            | 'ewsf13br'
            | 'ewsf15wo'
            | 'ewsf15st'
            | 'ewsf15vi'
            | 'ewsf15al'
            | 'ewsf15br'
            | 'ewsf19wo'
            | 'ewsf19st'
            | 'ewsf19vi'
            | 'ewsf19al'
            | 'ewsf19br'
            | 'ewsf21wo'
            | 'ewsf21st'
            | 'ewsf21vi'
            | 'ewsf21al'
            | 'ewsf21br'
            | 'ewps00wo'
            | 'ewps00st'
            | 'ewps00vi'
            | 'ewps00al'
            | 'ewps00br'
            | 'ewps03wo'
            | 'ewps03st'
            | 'ewps03vi'
            | 'ewps03al'
            | 'ewps03br'
            | 'ewps07wo'
            | 'ewps07st'
            | 'ewps07vi'
            | 'ewps07al'
            | 'ewps07br'
            | 'ewps11wo'
            | 'ewps11st'
            | 'ewps11vi'
            | 'ewps11al'
            | 'ewps11br'
            | 'ewps13wo'
            | 'ewps13st'
            | 'ewps13vi'
            | 'ewps13al'
            | 'ewps13br'
            | 'ewps15wo'
            | 'ewps15st'
            | 'ewps15vi'
            | 'ewps15al'
            | 'ewps15br'
            | 'ewps19wo'
            | 'ewps19st'
            | 'ewps19vi'
            | 'ewps19al'
            | 'ewps19br'
            | 'ewps21wo'
            | 'ewps21st'
            | 'ewps21vi'
            | 'ewps21al'
            | 'ewps21br'
            | 'ewov19wo'
            | 'ewov19st'
            | 'ewov19vi'
            | 'ewov19al'
            | 'ewov19br'
            | 'ewov21wo'
            | 'ewov21st'
            | 'ewov21vi'
            | 'ewov21al'
            | 'ewov21br'
            | 'ewov25wo'
            | 'ewov25st'
            | 'ewov25vi'
            | 'ewov25al'
            | 'ewov25br'
            | 'ewov27wo'
            | 'ewov27st'
            | 'ewov27vi'
            | 'ewov27al'
            | 'ewov27br'
            | 'ewov33wo'
            | 'ewov33st'
            | 'ewov33vi'
            | 'ewov33al'
            | 'ewov33br'
            | 'ewov35wo'
            | 'ewov35st'
            | 'ewov35vi'
            | 'ewov35al'
            | 'ewov35br'
            | 'ewov38wo'
            | 'ewov38st'
            | 'ewov38vi'
            | 'ewov38al'
            | 'ewov38br'
            | 'ewbr00nn'
            | 'ewbr05nn'
            | 'ewbr10nn'
            | 'ewcb00st'
            | 'ewcb00br'
            | 'ewcb00nn'
            | 'ewcb03st'
            | 'ewcb03br'
            | 'ewcb03nn'
            | 'ewcb06st'
            | 'ewcb06br'
            | 'ewcb06nn'
            | 'ewsb00st'
            | 'iwwf00'
            | 'iwwf03'
            | 'iwwf07'
            | 'iwwf11'
            | 'iwwf13'
            | 'iwwf15'
            | 'iwwf19'
            | 'iwwf21';
        /**
         * What is on the other side of the wall
         */
        adjacent_to:
            | 'outside'
            | 'other_unit'
            | 'other_heated_space'
            | 'other_multifamily_buffer_space'
            | 'other_non_freezing_space';
        /**
         * Inputs about the windows on this wall
         */
        zone_window?: {
          /**
           * Area of windows on this wall (square feet)
           */
          window_area: number;
          /**
           * Construction method to use for this window
           */
          window_method?: 'code' | 'custom';
          /**
           * assembly code for this window (only used if window_method is code)
           */
          window_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of this window (Btu/sf-hr-F) (only used if window_method is custom)
           */
          window_u_value?: number;
          /**
           * Solar heat gain coefficient of this window (only used if window_method is custom)
           */
          window_shgc?: number;
          /**
           * Does this window have a solar screen?
           */
          solar_screen?: boolean;
        };
      },
      {
        /**
         * Side this wall faces
         */
        side: 'front' | 'back' | 'right' | 'left';
        /**
         * Wall construction assembly code
         */
        wall_assembly_code?:
            | 'ewwf00wo'
            | 'ewwf00st'
            | 'ewwf00vi'
            | 'ewwf00al'
            | 'ewwf00br'
            | 'ewwf03wo'
            | 'ewwf03st'
            | 'ewwf03vi'
            | 'ewwf03al'
            | 'ewwf03br'
            | 'ewwf07wo'
            | 'ewwf07st'
            | 'ewwf07vi'
            | 'ewwf07al'
            | 'ewwf07br'
            | 'ewwf11wo'
            | 'ewwf11st'
            | 'ewwf11vi'
            | 'ewwf11al'
            | 'ewwf11br'
            | 'ewwf13wo'
            | 'ewwf13st'
            | 'ewwf13vi'
            | 'ewwf13al'
            | 'ewwf13br'
            | 'ewwf15wo'
            | 'ewwf15st'
            | 'ewwf15vi'
            | 'ewwf15al'
            | 'ewwf15br'
            | 'ewwf19wo'
            | 'ewwf19st'
            | 'ewwf19vi'
            | 'ewwf19al'
            | 'ewwf19br'
            | 'ewwf21wo'
            | 'ewwf21st'
            | 'ewwf21vi'
            | 'ewwf21al'
            | 'ewwf21br'
            | 'ewsf00wo'
            | 'ewsf00st'
            | 'ewsf00vi'
            | 'ewsf00al'
            | 'ewsf00br'
            | 'ewsf03wo'
            | 'ewsf03st'
            | 'ewsf03vi'
            | 'ewsf03al'
            | 'ewsf03br'
            | 'ewsf07wo'
            | 'ewsf07st'
            | 'ewsf07vi'
            | 'ewsf07al'
            | 'ewsf07br'
            | 'ewsf11wo'
            | 'ewsf11st'
            | 'ewsf11vi'
            | 'ewsf11al'
            | 'ewsf11br'
            | 'ewsf13wo'
            | 'ewsf13st'
            | 'ewsf13vi'
            | 'ewsf13al'
            | 'ewsf13br'
            | 'ewsf15wo'
            | 'ewsf15st'
            | 'ewsf15vi'
            | 'ewsf15al'
            | 'ewsf15br'
            | 'ewsf19wo'
            | 'ewsf19st'
            | 'ewsf19vi'
            | 'ewsf19al'
            | 'ewsf19br'
            | 'ewsf21wo'
            | 'ewsf21st'
            | 'ewsf21vi'
            | 'ewsf21al'
            | 'ewsf21br'
            | 'ewps00wo'
            | 'ewps00st'
            | 'ewps00vi'
            | 'ewps00al'
            | 'ewps00br'
            | 'ewps03wo'
            | 'ewps03st'
            | 'ewps03vi'
            | 'ewps03al'
            | 'ewps03br'
            | 'ewps07wo'
            | 'ewps07st'
            | 'ewps07vi'
            | 'ewps07al'
            | 'ewps07br'
            | 'ewps11wo'
            | 'ewps11st'
            | 'ewps11vi'
            | 'ewps11al'
            | 'ewps11br'
            | 'ewps13wo'
            | 'ewps13st'
            | 'ewps13vi'
            | 'ewps13al'
            | 'ewps13br'
            | 'ewps15wo'
            | 'ewps15st'
            | 'ewps15vi'
            | 'ewps15al'
            | 'ewps15br'
            | 'ewps19wo'
            | 'ewps19st'
            | 'ewps19vi'
            | 'ewps19al'
            | 'ewps19br'
            | 'ewps21wo'
            | 'ewps21st'
            | 'ewps21vi'
            | 'ewps21al'
            | 'ewps21br'
            | 'ewov19wo'
            | 'ewov19st'
            | 'ewov19vi'
            | 'ewov19al'
            | 'ewov19br'
            | 'ewov21wo'
            | 'ewov21st'
            | 'ewov21vi'
            | 'ewov21al'
            | 'ewov21br'
            | 'ewov25wo'
            | 'ewov25st'
            | 'ewov25vi'
            | 'ewov25al'
            | 'ewov25br'
            | 'ewov27wo'
            | 'ewov27st'
            | 'ewov27vi'
            | 'ewov27al'
            | 'ewov27br'
            | 'ewov33wo'
            | 'ewov33st'
            | 'ewov33vi'
            | 'ewov33al'
            | 'ewov33br'
            | 'ewov35wo'
            | 'ewov35st'
            | 'ewov35vi'
            | 'ewov35al'
            | 'ewov35br'
            | 'ewov38wo'
            | 'ewov38st'
            | 'ewov38vi'
            | 'ewov38al'
            | 'ewov38br'
            | 'ewbr00nn'
            | 'ewbr05nn'
            | 'ewbr10nn'
            | 'ewcb00st'
            | 'ewcb00br'
            | 'ewcb00nn'
            | 'ewcb03st'
            | 'ewcb03br'
            | 'ewcb03nn'
            | 'ewcb06st'
            | 'ewcb06br'
            | 'ewcb06nn'
            | 'ewsb00st'
            | 'iwwf00'
            | 'iwwf03'
            | 'iwwf07'
            | 'iwwf11'
            | 'iwwf13'
            | 'iwwf15'
            | 'iwwf19'
            | 'iwwf21';
        /**
         * What is on the other side of the wall
         */
        adjacent_to:
            | 'outside'
            | 'other_unit'
            | 'other_heated_space'
            | 'other_multifamily_buffer_space'
            | 'other_non_freezing_space';
        /**
         * Inputs about the windows on this wall
         */
        zone_window?: {
          /**
           * Area of windows on this wall (square feet)
           */
          window_area: number;
          /**
           * Construction method to use for this window
           */
          window_method?: 'code' | 'custom';
          /**
           * assembly code for this window (only used if window_method is code)
           */
          window_code?:
              | 'scna'
              | 'scnw'
              | 'stna'
              | 'stnw'
              | 'dcaa'
              | 'dcab'
              | 'dcaw'
              | 'dtaa'
              | 'dtab'
              | 'dtaw'
              | 'dpeaw'
              | 'dpeaab'
              | 'dpeaaw'
              | 'dseaa'
              | 'dseab'
              | 'dseaw'
              | 'dseaaw'
              | 'thmabw';
          /**
           * U-value of this window (Btu/sf-hr-F) (only used if window_method is custom)
           */
          window_u_value?: number;
          /**
           * Solar heat gain coefficient of this window (only used if window_method is custom)
           */
          window_shgc?: number;
          /**
           * Does this window have a solar screen?
           */
          solar_screen?: boolean;
        };
      }
    ];
  };
  systems: {
    /**
     * @minItems 1
     * @maxItems 2
     */
    hvac:
        | [
      {
        /**
         * Name of this system instance
         */
        hvac_name: 'hvac1' | 'hvac2';
        /**
         * Fraction of conditioned floor area served by this system
         */
        hvac_fraction: number;
        /**
         * Inputs about the heating system
         */
        heating?: {
          /**
           * Heating equipment type
           */
          type: (
              | None
              | CentralFurnace
              | RoomThroughTheWallFurnace
              | Boiler
              | HeatPump
              | BaseboardHeater
              | GroundCoupledHeatPump
              | MinisplitDuctlessHeatPump
              | WoodStove
              ) &
              string;
          /**
           * Primary heating fuel
           */
          fuel_primary?: (Gas | PropaneLPG | Oil | Electric | Wood | Pellets) & string;
          /**
           * Method to determine heating efficiency
           */
          efficiency_method?: 'user' | 'shipment_weighted';
          /**
           * Year equipment was manufactured (only used if efficiency_method is shipment_weighted)
           */
          year?: number;
          efficiency?: number;
          efficiency_unit?: 'afue' | 'cop' | 'hspf' | 'hspf2';
        };
        /**
         * Inputs about the cooling system
         */
        cooling?: {
          /**
           * Cooling equipment type
           */
          type: (
              | RoomAirConditioner
              | CentralAirConditioner
              | ElectricHeatPump
              | GroundCoupledHeatPump1
              | DirectEvaporativeCooling
              | MinisplitDuctlessHeatPump1
              | None1
              ) &
              string;
          /**
           * Method to determine cooling efficiency
           */
          efficiency_method?: 'user' | 'shipment_weighted';
          /**
           * Year equipment was manufactured (only used if efficiency_method is shipment_weighted)
           */
          year?: number;
          efficiency?: number;
          efficiency_unit?: 'eer' | 'ceer' | 'seer' | 'seer2';
        };
        hvac_distribution?: HvacDistribution;
      }
    ]
        | [
      {
        /**
         * Name of this system instance
         */
        hvac_name: 'hvac1' | 'hvac2';
        /**
         * Fraction of conditioned floor area served by this system
         */
        hvac_fraction: number;
        /**
         * Inputs about the heating system
         */
        heating?: {
          /**
           * Heating equipment type
           */
          type: (
              | None
              | CentralFurnace
              | RoomThroughTheWallFurnace
              | Boiler
              | HeatPump
              | BaseboardHeater
              | GroundCoupledHeatPump
              | MinisplitDuctlessHeatPump
              | WoodStove
              ) &
              string;
          /**
           * Primary heating fuel
           */
          fuel_primary?: (Gas | PropaneLPG | Oil | Electric | Wood | Pellets) & string;
          /**
           * Method to determine heating efficiency
           */
          efficiency_method?: 'user' | 'shipment_weighted';
          /**
           * Year equipment was manufactured (only used if efficiency_method is shipment_weighted)
           */
          year?: number;
          efficiency?: number;
          efficiency_unit?: 'afue' | 'cop' | 'hspf' | 'hspf2';
        };
        /**
         * Inputs about the cooling system
         */
        cooling?: {
          /**
           * Cooling equipment type
           */
          type: (
              | RoomAirConditioner
              | CentralAirConditioner
              | ElectricHeatPump
              | GroundCoupledHeatPump1
              | DirectEvaporativeCooling
              | MinisplitDuctlessHeatPump1
              | None1
              ) &
              string;
          /**
           * Method to determine cooling efficiency
           */
          efficiency_method?: 'user' | 'shipment_weighted';
          /**
           * Year equipment was manufactured (only used if efficiency_method is shipment_weighted)
           */
          year?: number;
          efficiency?: number;
          efficiency_unit?: 'eer' | 'ceer' | 'seer' | 'seer2';
        };
        hvac_distribution?: HvacDistribution;
      },
      {
        /**
         * Name of this system instance
         */
        hvac_name: 'hvac1' | 'hvac2';
        /**
         * Fraction of conditioned floor area served by this system
         */
        hvac_fraction: number;
        /**
         * Inputs about the heating system
         */
        heating?: {
          /**
           * Heating equipment type
           */
          type: (
              | None
              | CentralFurnace
              | RoomThroughTheWallFurnace
              | Boiler
              | HeatPump
              | BaseboardHeater
              | GroundCoupledHeatPump
              | MinisplitDuctlessHeatPump
              | WoodStove
              ) &
              string;
          /**
           * Primary heating fuel
           */
          fuel_primary?: (Gas | PropaneLPG | Oil | Electric | Wood | Pellets) & string;
          /**
           * Method to determine heating efficiency
           */
          efficiency_method?: 'user' | 'shipment_weighted';
          /**
           * Year equipment was manufactured (only used if efficiency_method is shipment_weighted)
           */
          year?: number;
          efficiency?: number;
          efficiency_unit?: 'afue' | 'cop' | 'hspf' | 'hspf2';
        };
        /**
         * Inputs about the cooling system
         */
        cooling?: {
          /**
           * Cooling equipment type
           */
          type: (
              | RoomAirConditioner
              | CentralAirConditioner
              | ElectricHeatPump
              | GroundCoupledHeatPump1
              | DirectEvaporativeCooling
              | MinisplitDuctlessHeatPump1
              | None1
              ) &
              string;
          /**
           * Method to determine cooling efficiency
           */
          efficiency_method?: 'user' | 'shipment_weighted';
          /**
           * Year equipment was manufactured (only used if efficiency_method is shipment_weighted)
           */
          year?: number;
          efficiency?: number;
          efficiency_unit?: 'eer' | 'ceer' | 'seer' | 'seer2';
        };
        hvac_distribution?: HvacDistribution;
      }
    ];
    domestic_hot_water: {
      /**
       * Water heater category
       */
      category: 'unit' | 'combined';
      /**
       * Water heater type
       */
      type: (Storage | HeatPump1 | IndirectTank | TanklessCoil | Instantaneous) & string;
      /**
       * Primary water heater fuel
       */
      fuel_primary?: (Electric1 | NaturalGas | LPG | Oil1) & string;
      /**
       * Method to determine water heater efficiency
       */
      efficiency_method?: 'user' | 'shipment_weighted';
      /**
       * Year water heater was manufactured (only used if efficiency_method is shipment_weighted)
       */
      year?: number;
      /**
       * Efficiency of water heater (only used if efficiency_method is user)
       */
      efficiency?: number;
      /**
       * Unit of water heater efficiency
       */
      efficiency_unit?: 'ef' | 'uef';
    };
    generation?: {
      solar_electric?: {
        /**
         * Is the capacity known?
         */
        capacity_known: boolean;
        /**
         * DC capacity of system (kW) (only used if capacity_known is true)
         */
        system_capacity?: number;
        /**
         * Number of panels in the system (only used if capacity_known is false)
         */
        num_panels?: number;
        /**
         * Total number of units sharing the PV system
         */
        number_units_sharing_system?: number;
        /**
         * Year system was installed
         */
        year: number;
        /**
         * Direction panels face
         */
        array_azimuth:
            | 'north'
            | 'north_east'
            | 'east'
            | 'south_east'
            | 'south'
            | 'south_west'
            | 'west'
            | 'north_west';
        /**
         * Tilt of panels
         */
        array_tilt: 'flat' | 'low_slope' | 'medium_slope' | 'steep_slope';
      };
    };
  };
}
/**
 * Inputs about the ducts
 */
export interface HvacDistribution {
  /**
   * Method for duct leakage inputs
   */
  leakage_method: 'qualitative' | 'quantitative';
  /**
   * Duct leakage to outside in CFM25 (only used if leakage_method is quantitative)
   */
  leakage_to_outside?: number;
  /**
   * Are the ducts sealed? (only used if leakage_method is qualitative)
   */
  sealed?: boolean;
  /**
   * @minItems 1
   * @maxItems 3
   */
  duct:
      | [
    {
      /**
       * Name of distribution system
       */
      name?: 'duct1' | 'duct2' | 'duct3';
      /**
       * Location of distribution system
       */
      location?: (
          | ConditionedSpace
          | UnconditionedBasement1
          | VentedCrawlspace1
          | UnventedCrawlspaceUnconditionedGarage
          | UnconditionedAttic1
          | UnderSlab
          | InExteriorWall
          | ManufacturdHomeBelly
          | Outside
          ) &
          string;
      /**
       * Fraction of total duct length
       */
      fraction?: number;
      /**
       * Are the ducts insulated?
       */
      insulated?: boolean;
    }
  ]
      | [
    {
      /**
       * Name of distribution system
       */
      name?: 'duct1' | 'duct2' | 'duct3';
      /**
       * Location of distribution system
       */
      location?: (
          | ConditionedSpace
          | UnconditionedBasement1
          | VentedCrawlspace1
          | UnventedCrawlspaceUnconditionedGarage
          | UnconditionedAttic1
          | UnderSlab
          | InExteriorWall
          | ManufacturdHomeBelly
          | Outside
          ) &
          string;
      /**
       * Fraction of total duct length
       */
      fraction?: number;
      /**
       * Are the ducts insulated?
       */
      insulated?: boolean;
    },
    {
      /**
       * Name of distribution system
       */
      name?: 'duct1' | 'duct2' | 'duct3';
      /**
       * Location of distribution system
       */
      location?: (
          | ConditionedSpace
          | UnconditionedBasement1
          | VentedCrawlspace1
          | UnventedCrawlspaceUnconditionedGarage
          | UnconditionedAttic1
          | UnderSlab
          | InExteriorWall
          | ManufacturdHomeBelly
          | Outside
          ) &
          string;
      /**
       * Fraction of total duct length
       */
      fraction?: number;
      /**
       * Are the ducts insulated?
       */
      insulated?: boolean;
    }
  ]
      | [
    {
      /**
       * Name of distribution system
       */
      name?: 'duct1' | 'duct2' | 'duct3';
      /**
       * Location of distribution system
       */
      location?: (
          | ConditionedSpace
          | UnconditionedBasement1
          | VentedCrawlspace1
          | UnventedCrawlspaceUnconditionedGarage
          | UnconditionedAttic1
          | UnderSlab
          | InExteriorWall
          | ManufacturdHomeBelly
          | Outside
          ) &
          string;
      /**
       * Fraction of total duct length
       */
      fraction?: number;
      /**
       * Are the ducts insulated?
       */
      insulated?: boolean;
    },
    {
      /**
       * Name of distribution system
       */
      name?: 'duct1' | 'duct2' | 'duct3';
      /**
       * Location of distribution system
       */
      location?: (
          | ConditionedSpace
          | UnconditionedBasement1
          | VentedCrawlspace1
          | UnventedCrawlspaceUnconditionedGarage
          | UnconditionedAttic1
          | UnderSlab
          | InExteriorWall
          | ManufacturdHomeBelly
          | Outside
          ) &
          string;
      /**
       * Fraction of total duct length
       */
      fraction?: number;
      /**
       * Are the ducts insulated?
       */
      insulated?: boolean;
    },
    {
      /**
       * Name of distribution system
       */
      name?: 'duct1' | 'duct2' | 'duct3';
      /**
       * Location of distribution system
       */
      location?: (
          | ConditionedSpace
          | UnconditionedBasement1
          | VentedCrawlspace1
          | UnventedCrawlspaceUnconditionedGarage
          | UnconditionedAttic1
          | UnderSlab
          | InExteriorWall
          | ManufacturdHomeBelly
          | Outside
          ) &
          string;
      /**
       * Fraction of total duct length
       */
      fraction?: number;
      /**
       * Are the ducts insulated?
       */
      insulated?: boolean;
    }
  ];
  [k: string]: unknown;
}
export interface HEScoreUpgradesSchema {
  /**
   * The version of the upgrade schema. Use semantic versioning.
   */
  version: '1.0';
  /**
   * Inputs about the applicable upgrades
   */
  upgrades: {
    /**
     * ID of the upgrade
     */
    upgrade_id?: number;
    /**
     * Upgrades that can be applied to the base building
     */
    upgrade_code?:
        | 'attic_insulation'
        | 'floor_insulation'
        | 'roof_absorptance'
        | 'roof_sheathing'
        | 'knee_wall_insulation'
        | 'wall_insulation'
        | 'wall_sheathing'
        | 'skylight'
        | 'skylight_storm'
        | 'window'
        | 'window_storm'
        | 'foundation_wall_insulation'
        | 'envelope_sealing'
        | 'duct_insulation'
        | 'duct_sealing'
        | 'heating_efficiency'
        | 'cooling_efficiency'
        | 'hp_efficiency'
        | 'replace_hvac_with_ducted_heat_pump'
        | 'replace_hvac_with_ductless_mini_split'
        | 'replace_heating_with_ng'
        | 'wh_efficiency'
        | 'replace_wh_with_heat_pump'
        | 'replace_wh_fuel_with_ng';
    /**
     * Insulation R value of the upgrade
     */
    insulation_R_value?: number;
    /**
     * Solar absorptance of the upgraded roof.
     */
    solar_absorptance?: number;
    /**
     * R value of the added insulation
     */
    added_insulation_R_value?: number;
    /**
     * Construction assembly code for window/skylight upgrades
     */
    window_code?: string;
    /**
     * Storm type for window/skylight storm upgrades
     */
    storm_type?: 'low-e' | 'clear';
    /**
     * Fractional reduction of leakage for sealing upgrades
     */
    leakage_reduction?: number;
    /**
     * Unit of cooling efficiency for upgraded cooling/heat pump system
     */
    cooling_efficiency_unit?: 'seer' | 'eer';
    /**
     * Cooling efficiency value for upgraded cooling/heat pump system
     */
    cooling_efficiency_value?: number;
    /**
     * Unit of heating efficiency for upgraded heating/heat pump system
     */
    heating_efficiency_unit?: 'hspf' | 'afue';
    /**
     * Heating efficiency value for upgraded heating/heat pump system
     */
    heating_efficiency_value?: number;
    /**
     * Unit of efficiency for upgraded domestic hot water systems
     */
    wh_efficiency_unit?: 'energy_factor' | 'uniform_energy_factor';
    /**
     * Efficiency value for upgraded domestic hot water systems
     */
    wh_efficiency_value?: number;
    /**
     * Array of instances that upgrade applies to
     *
     * @minItems 1
     */
    instance_ids?: [unknown, ...unknown[]] | null;
  }[];
}
